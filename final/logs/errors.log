2025-09-02 04:13:37,818 - confession_bot.ranking_system - ERROR - initialize_user_ranking:157 - Failed to initialize ranking for user 1298849354 (type: <class 'int'>): no such table: user_rankings
2025-09-02 04:13:37,878 - confession_bot.ranking_system - ERROR - award_points:211 - Failed to award points to user 1298849354: no such table: point_transactions
2025-09-02 04:13:44,852 - confession_bot.error_handler - ERROR - wrapper:221 - Unexpected error in callback_handler: tuple index out of range
Traceback (most recent call last):
  File "C:\Users\sende\Desktop\bott\error_handler.py", line 123, in wrapper
    return await func(update, context, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\bott\bot.py", line 1672, in callback_handler
    await admin_callback(update, context)
  File "C:\Users\sende\Desktop\bott\approval.py", line 172, in admin_callback
    if post[13] == 0:  # approved field is at index 13
       ~~~~^^^^
IndexError: tuple index out of range
2025-09-02 04:13:48,052 - confession_bot.error_handler - ERROR - notify_admins_of_error:308 - Failed to notify admin 1298849354 of error: Can't parse entities: can't find end of the entity starting at byte offset 368
2025-09-02 04:13:48,206 - confession_bot.error_handler - ERROR - notify_admins_of_error:308 - Failed to notify admin 7085119805 of error: Can't parse entities: can't find end of the entity starting at byte offset 368
2025-09-02 04:13:48,354 - confession_bot.error_handler - ERROR - notify_admins_of_error:308 - Failed to notify admin 6261688120 of error: Can't parse entities: can't find end of the entity starting at byte offset 368
2025-09-02 04:13:51,542 - confession_bot.error_handler - ERROR - wrapper:221 - Unexpected error in callback_handler: tuple index out of range
Traceback (most recent call last):
  File "C:\Users\sende\Desktop\bott\error_handler.py", line 123, in wrapper
    return await func(update, context, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\bott\bot.py", line 1672, in callback_handler
    await admin_callback(update, context)
  File "C:\Users\sende\Desktop\bott\approval.py", line 172, in admin_callback
    if post[13] == 0:  # approved field is at index 13
       ~~~~^^^^
IndexError: tuple index out of range
2025-09-02 04:13:51,696 - confession_bot.error_handler - ERROR - notify_admins_of_error:308 - Failed to notify admin 1298849354 of error: Can't parse entities: can't find end of the entity starting at byte offset 368
2025-09-02 04:13:51,844 - confession_bot.error_handler - ERROR - notify_admins_of_error:308 - Failed to notify admin 7085119805 of error: Can't parse entities: can't find end of the entity starting at byte offset 368
2025-09-02 04:13:51,994 - confession_bot.error_handler - ERROR - notify_admins_of_error:308 - Failed to notify admin 6261688120 of error: Can't parse entities: can't find end of the entity starting at byte offset 368
2025-09-02 04:13:54,044 - confession_bot.error_handler - ERROR - wrapper:221 - Unexpected error in callback_handler: tuple index out of range
Traceback (most recent call last):
  File "C:\Users\sende\Desktop\bott\error_handler.py", line 123, in wrapper
    return await func(update, context, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\bott\bot.py", line 1672, in callback_handler
    await admin_callback(update, context)
  File "C:\Users\sende\Desktop\bott\approval.py", line 172, in admin_callback
    if post[13] == 0:  # approved field is at index 13
       ~~~~^^^^
IndexError: tuple index out of range
2025-09-02 04:13:54,201 - confession_bot.error_handler - ERROR - notify_admins_of_error:308 - Failed to notify admin 1298849354 of error: Can't parse entities: can't find end of the entity starting at byte offset 368
2025-09-02 04:13:54,342 - confession_bot.error_handler - ERROR - notify_admins_of_error:308 - Failed to notify admin 7085119805 of error: Can't parse entities: can't find end of the entity starting at byte offset 368
2025-09-02 04:13:54,491 - confession_bot.error_handler - ERROR - notify_admins_of_error:308 - Failed to notify admin 6261688120 of error: Can't parse entities: can't find end of the entity starting at byte offset 368
2025-09-02 04:13:57,741 - confession_bot.error_handler - ERROR - wrapper:221 - Unexpected error in callback_handler: tuple index out of range
Traceback (most recent call last):
  File "C:\Users\sende\Desktop\bott\error_handler.py", line 123, in wrapper
    return await func(update, context, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\bott\bot.py", line 1672, in callback_handler
    await admin_callback(update, context)
  File "C:\Users\sende\Desktop\bott\approval.py", line 91, in admin_callback
    if post[13] == 1:  # approved field is at index 13
       ~~~~^^^^
IndexError: tuple index out of range
2025-09-02 04:13:57,894 - confession_bot.error_handler - ERROR - notify_admins_of_error:308 - Failed to notify admin 1298849354 of error: Can't parse entities: can't find end of the entity starting at byte offset 368
2025-09-02 04:13:58,035 - confession_bot.error_handler - ERROR - notify_admins_of_error:308 - Failed to notify admin 7085119805 of error: Can't parse entities: can't find end of the entity starting at byte offset 368
2025-09-02 04:13:58,174 - confession_bot.error_handler - ERROR - notify_admins_of_error:308 - Failed to notify admin 6261688120 of error: Can't parse entities: can't find end of the entity starting at byte offset 368
2025-09-02 04:14:30,272 - confession_bot.ranking_system - ERROR - initialize_user_ranking:157 - Failed to initialize ranking for user 7085119805 (type: <class 'int'>): no such table: user_rankings
2025-09-02 04:14:30,286 - confession_bot.ranking_system - ERROR - get_user_rank:516 - Failed to get user rank for 7085119805: no such table: user_rankings
2025-09-02 04:14:30,293 - confession_bot.ranking_system - ERROR - initialize_user_ranking:157 - Failed to initialize ranking for user 7085119805 (type: <class 'int'>): no such table: user_rankings
2025-09-02 04:14:30,301 - confession_bot.ranking_system - ERROR - initialize_user_ranking:157 - Failed to initialize ranking for user 7085119805 (type: <class 'int'>): no such table: user_rankings
2025-09-02 04:14:30,361 - confession_bot.ranking_system - ERROR - get_user_rank:516 - Failed to get user rank for 7085119805: no such table: user_rankings
2025-09-02 04:15:06,954 - confession_bot.trending - ERROR - get_popular_today_posts:172 - Error getting popular today posts: no such column: p.post_number
2025-09-02 04:15:06,963 - confession_bot.trending - ERROR - get_posts_with_most_liked_comments:66 - Error getting posts with most liked comments: no such column: p.post_number
2025-09-02 04:15:09,991 - confession_bot.ranking_system - ERROR - initialize_user_ranking:157 - Failed to initialize ranking for user 7085119805 (type: <class 'int'>): no such table: user_rankings
2025-09-02 04:15:10,002 - confession_bot.ranking_system - ERROR - get_user_rank:516 - Failed to get user rank for 7085119805: no such table: user_rankings
2025-09-02 04:15:10,011 - confession_bot.ranking_system - ERROR - initialize_user_ranking:157 - Failed to initialize ranking for user 7085119805 (type: <class 'int'>): no such table: user_rankings
2025-09-02 04:15:10,018 - confession_bot.ranking_system - ERROR - initialize_user_ranking:157 - Failed to initialize ranking for user 7085119805 (type: <class 'int'>): no such table: user_rankings
2025-09-02 04:15:10,032 - confession_bot.ranking_system - ERROR - get_user_rank:516 - Failed to get user rank for 7085119805: no such table: user_rankings
2025-09-02 04:15:12,559 - confession_bot.error_handler - ERROR - wrapper:221 - Unexpected error in handle_menu_choice: no such column: p.post_number
Traceback (most recent call last):
  File "C:\Users\sende\Desktop\bott\error_handler.py", line 123, in wrapper
    return await func(update, context, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\bott\bot.py", line 234, in handle_menu_choice
    await daily_digest(update, context)
  File "C:\Users\sende\Desktop\bott\bot.py", line 1586, in daily_digest
    posts = get_todays_posts()
  File "C:\Users\sende\Desktop\bott\submission.py", line 72, in get_todays_posts
    cursor.execute('''
    ~~~~~~~~~~~~~~^^^^
        SELECT p.post_id, p.content, p.category, p.timestamp, p.approved,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
        ORDER BY p.timestamp DESC
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    ''', ())
    ^^^^^^^^
sqlite3.OperationalError: no such column: p.post_number
2025-09-02 04:16:18,370 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-02 04:16:18,654 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Query is too old and response timeout expired or query id is invalid
2025-09-02 04:16:19,120 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Query is too old and response timeout expired or query id is invalid
2025-09-03 03:36:30,688 - confession_bot.migrations - ERROR - apply_migration:369 - Failed to apply migration 12: duplicate column name: post_number
2025-09-03 03:36:30,701 - confession_bot.migrations - ERROR - migrate_to_latest:395 - Migration failed at version 12
2025-09-03 03:37:41,363 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-03 03:37:48,722 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-03 03:40:23,937 - confession_bot.error_handler - ERROR - wrapper:149 - Request timed out: Timed out
2025-09-03 03:42:24,254 - confession_bot.error_handler - ERROR - wrapper:149 - Request timed out: Timed out
2025-09-03 03:45:17,905 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Query is too old and response timeout expired or query id is invalid
2025-09-03 03:45:23,172 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Query is too old and response timeout expired or query id is invalid
2025-09-03 03:45:24,585 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Query is too old and response timeout expired or query id is invalid
2025-09-03 03:45:27,049 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Query is too old and response timeout expired or query id is invalid
2025-09-03 03:45:44,948 - confession_bot.error_handler - ERROR - wrapper:183 - Network error: Unknown error in HTTP implementation: EndOfStream()
2025-09-03 03:46:27,591 - confession_bot.error_handler - ERROR - wrapper:149 - Request timed out: Timed out
2025-09-03 03:46:47,064 - confession_bot.ranking_system - ERROR - initialize_user_ranking:157 - Failed to initialize ranking for user 1298849354 (type: <class 'int'>): no such table: user_rankings
2025-09-03 03:46:47,073 - confession_bot.ranking_system - ERROR - award_points:211 - Failed to award points to user 1298849354: no such table: point_transactions
2025-09-03 03:47:10,340 - confession_bot.ranking_system - ERROR - initialize_user_ranking:157 - Failed to initialize ranking for user 1298849354 (type: <class 'int'>): no such table: user_rankings
2025-09-03 03:47:10,351 - confession_bot.ranking_system - ERROR - award_points:211 - Failed to award points to user 1298849354: no such table: point_transactions
2025-09-03 03:48:15,927 - confession_bot.ranking_system - ERROR - initialize_user_ranking:157 - Failed to initialize ranking for user 1298849354 (type: <class 'int'>): no such table: user_rankings
2025-09-03 03:48:15,930 - confession_bot.ranking_system - ERROR - get_user_rank:516 - Failed to get user rank for 1298849354: no such table: user_rankings
2025-09-03 03:48:15,934 - confession_bot.ranking_system - ERROR - initialize_user_ranking:157 - Failed to initialize ranking for user 1298849354 (type: <class 'int'>): no such table: user_rankings
2025-09-03 03:48:15,937 - confession_bot.ranking_system - ERROR - initialize_user_ranking:157 - Failed to initialize ranking for user 1298849354 (type: <class 'int'>): no such table: user_rankings
2025-09-03 03:48:15,940 - confession_bot.ranking_system - ERROR - get_user_rank:516 - Failed to get user rank for 1298849354: no such table: user_rankings
2025-09-03 03:58:40,637 - confession_bot.ranking_system - ERROR - initialize_user_ranking:157 - Failed to initialize ranking for user 1298849354 (type: <class 'int'>): no such table: user_rankings
2025-09-03 03:58:40,645 - confession_bot.ranking_system - ERROR - get_user_rank:516 - Failed to get user rank for 1298849354: no such table: user_rankings
2025-09-03 03:58:40,650 - confession_bot.ranking_system - ERROR - initialize_user_ranking:157 - Failed to initialize ranking for user 1298849354 (type: <class 'int'>): no such table: user_rankings
2025-09-03 03:58:40,658 - confession_bot.ranking_system - ERROR - initialize_user_ranking:157 - Failed to initialize ranking for user 1298849354 (type: <class 'int'>): no such table: user_rankings
2025-09-03 03:58:40,664 - confession_bot.ranking_system - ERROR - get_user_rank:516 - Failed to get user rank for 1298849354: no such table: user_rankings
2025-09-03 03:59:27,537 - confession_bot.ranking_system - ERROR - initialize_user_ranking:157 - Failed to initialize ranking for user 1298849354 (type: <class 'int'>): no such table: user_rankings
2025-09-03 03:59:27,544 - confession_bot.ranking_system - ERROR - award_points:211 - Failed to award points to user 1298849354: no such table: point_transactions
2025-09-03 03:59:44,226 - confession_bot.ranking_system - ERROR - initialize_user_ranking:157 - Failed to initialize ranking for user 1298849354 (type: <class 'int'>): no such table: user_rankings
2025-09-03 03:59:44,236 - confession_bot.ranking_system - ERROR - award_points:211 - Failed to award points to user 1298849354: no such table: point_transactions
2025-09-03 04:05:37,318 - confession_bot.ranking_system - ERROR - initialize_user_ranking:157 - Failed to initialize ranking for user 1298849354 (type: <class 'int'>): no such table: user_rankings
2025-09-03 04:05:37,324 - confession_bot.ranking_system - ERROR - get_user_rank:516 - Failed to get user rank for 1298849354: no such table: user_rankings
2025-09-03 04:05:37,330 - confession_bot.ranking_system - ERROR - initialize_user_ranking:157 - Failed to initialize ranking for user 1298849354 (type: <class 'int'>): no such table: user_rankings
2025-09-03 04:05:37,334 - confession_bot.ranking_system - ERROR - initialize_user_ranking:157 - Failed to initialize ranking for user 1298849354 (type: <class 'int'>): no such table: user_rankings
2025-09-03 04:05:37,339 - confession_bot.ranking_system - ERROR - get_user_rank:516 - Failed to get user rank for 1298849354: no such table: user_rankings
2025-09-03 04:07:41,315 - confession_bot.ranking_system - ERROR - get_user_rank:516 - Failed to get user rank for 1298849354: no such column: ur.rank_progress
2025-09-03 04:07:41,330 - confession_bot.ranking_system - ERROR - get_user_rank:516 - Failed to get user rank for 1298849354: no such column: ur.rank_progress
2025-09-03 04:10:27,770 - confession_bot.ranking_system - ERROR - get_user_rank:516 - Failed to get user rank for 1298849354: no such column: ur.rank_progress
2025-09-03 04:10:27,788 - confession_bot.ranking_system - ERROR - get_user_rank:516 - Failed to get user rank for 1298849354: no such column: ur.rank_progress
2025-09-03 04:13:00,534 - confession_bot.error_handler - ERROR - wrapper:149 - Request timed out: Timed out
2025-09-03 04:14:06,591 - confession_bot.ranking_system - ERROR - get_user_achievements:604 - Failed to get achievements for user 1298849354: no such column: earned_date
2025-09-03 04:14:22,161 - confession_bot.ranking_system - ERROR - get_user_achievements:604 - Failed to get achievements for user 1298849354: no such column: earned_date
2025-09-03 04:16:49,404 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_application.py", line 1124, in process_update
    await coroutine
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_handler.py", line 141, in handle_update
    return await self.callback(update, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\bott\ranking_ui.py", line 483, in ranking_callback_handler
    await show_leaderboard(update, context, timeframe)
  File "C:\Users\sende\Desktop\bott\ranking_ui.py", line 297, in show_leaderboard
    await update.callback_query.edit_message_text(
    ...<3 lines>...
    )
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_callbackquery.py", line 241, in edit_message_text
    return await self.message.edit_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_message.py", line 2526, in edit_text
    return await self.get_bot().edit_message_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<13 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 1482, in edit_message_text
    return await super().edit_message_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<13 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3381, in edit_message_text
    return await self._send_message(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 507, in _send_message
    result = await super()._send_message(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<17 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 559, in _send_message
    result = await self._post(
             ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 328, in _request_wrapper
    raise BadRequest(message)
telegram.error.BadRequest: Message is not modified: specified new message content and reply markup are exactly the same as a current content and reply markup of the message
2025-09-03 04:16:53,500 - confession_bot.error_handler - ERROR - notify_admins_of_error:308 - Failed to notify admin 1298849354 of error: Can't parse entities: can't find end of the entity starting at byte offset 1202
2025-09-03 04:16:54,934 - confession_bot.error_handler - ERROR - notify_admins_of_error:308 - Failed to notify admin 7085119805 of error: Can't parse entities: can't find end of the entity starting at byte offset 1202
2025-09-03 04:16:56,368 - confession_bot.error_handler - ERROR - notify_admins_of_error:308 - Failed to notify admin 6261688120 of error: Can't parse entities: can't find end of the entity starting at byte offset 1202
2025-09-03 04:52:50,264 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Query is too old and response timeout expired or query id is invalid
2025-09-03 04:53:05,009 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Message is not modified: specified new message content and reply markup are exactly the same as a current content and reply markup of the message
2025-09-03 04:53:06,324 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-03 04:53:35,250 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-03 04:53:36,597 - confession_bot.ranking_integration - ERROR - check_and_notify_rank_up:277 - Error checking rank up: no such table: rank_history
2025-09-03 04:53:36,832 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-03 04:55:05,039 - confession_bot.error_handler - ERROR - wrapper:183 - Network error: Unknown error in HTTP implementation: EndOfStream()
2025-09-03 05:03:43,171 - confession_bot.ranking_ui - ERROR - show_ranking_menu:241 - Error editing message: Message is not modified: specified new message content and reply markup are exactly the same as a current content and reply markup of the message
2025-09-03 05:06:21,482 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_application.py", line 1124, in process_update
    await coroutine
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_handler.py", line 141, in handle_update
    return await self.callback(update, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\bott\ranking_ui.py", line 473, in ranking_callback_handler
    await query.answer()
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_callbackquery.py", line 180, in answer
    return await self.get_bot().answer_callback_query(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 773, in answer_callback_query
    return await super().answer_callback_query(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3306, in answer_callback_query
    return await self._post(
           ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 328, in _request_wrapper
    raise BadRequest(message)
telegram.error.BadRequest: Query is too old and response timeout expired or query id is invalid
2025-09-03 05:06:23,325 - confession_bot.error_handler - ERROR - notify_admins_of_error:308 - Failed to notify admin 1298849354 of error: Can't parse entities: can't find end of the entity starting at byte offset 1253
2025-09-03 05:06:24,759 - confession_bot.error_handler - ERROR - notify_admins_of_error:308 - Failed to notify admin 7085119805 of error: Can't parse entities: can't find end of the entity starting at byte offset 1253
2025-09-03 05:06:28,856 - confession_bot.error_handler - ERROR - notify_admins_of_error:308 - Failed to notify admin 6261688120 of error: Can't parse entities: can't find end of the entity starting at byte offset 1253
2025-09-03 05:06:30,084 - confession_bot.error_handler - ERROR - global_error_handler:406 - Failed to send error message to user
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_application.py", line 1124, in process_update
    await coroutine
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_handler.py", line 141, in handle_update
    return await self.callback(update, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\bott\ranking_ui.py", line 473, in ranking_callback_handler
    await query.answer()
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_callbackquery.py", line 180, in answer
    return await self.get_bot().answer_callback_query(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 773, in answer_callback_query
    return await super().answer_callback_query(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3306, in answer_callback_query
    return await self._post(
           ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 328, in _request_wrapper
    raise BadRequest(message)
telegram.error.BadRequest: Query is too old and response timeout expired or query id is invalid

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\sende\Desktop\bott\error_handler.py", line 401, in global_error_handler
    await update.callback_query.answer(
    ...<2 lines>...
    )
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_callbackquery.py", line 180, in answer
    return await self.get_bot().answer_callback_query(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 773, in answer_callback_query
    return await super().answer_callback_query(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3306, in answer_callback_query
    return await self._post(
           ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 328, in _request_wrapper
    raise BadRequest(message)
telegram.error.BadRequest: Query is too old and response timeout expired or query id is invalid
2025-09-03 05:07:04,697 - confession_bot.ranking_ui - ERROR - show_ranking_menu:241 - Error editing message: Message is not modified: specified new message content and reply markup are exactly the same as a current content and reply markup of the message
2025-09-03 05:10:25,912 - confession_bot.error_handler - ERROR - wrapper:183 - Network error: Unknown error in HTTP implementation: EndOfStream()
2025-09-03 05:11:46,297 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-03 05:11:53,569 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-03 05:12:15,174 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '-' is reserved and must be escaped with the preceding '\'
2025-09-03 05:12:47,328 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '-' is reserved and must be escaped with the preceding '\'
2025-09-03 05:12:55,112 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '-' is reserved and must be escaped with the preceding '\'
2025-09-03 05:13:19,073 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-03 05:13:26,241 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-03 05:16:27,703 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http_proxy.py", line 326, in handle_async_request
    return await self._connection.handle_async_request(request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http11.py", line 121, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http11.py", line 99, in handle_async_request
    ) = await self._receive_response_headers(**kwargs)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http11.py", line 164, in _receive_response_headers
    event = await self._receive_event(timeout=timeout)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http11.py", line 214, in _receive_event
    raise RemoteProtocolError(msg)
httpcore.RemoteProtocolError: Server disconnected without sending a response.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.RemoteProtocolError: Server disconnected without sending a response.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.RemoteProtocolError: Server disconnected without sending a response.
2025-09-03 05:34:30,156 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\streams\tls.py", line 173, in _call_sslobject_method
    result = func(*args)
  File "C:\Program Files\Python313\Lib\ssl.py", line 951, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
ssl.SSLWantReadError: The operation did not complete (read) (_ssl.c:1028)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_tasks.py", line 115, in fail_after
    yield cancel_scope
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 69, in start_tls
    ssl_stream = await anyio.streams.tls.TLSStream.wrap(
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\streams\tls.py", line 165, in wrap
    await wrapper._call_sslobject_method(ssl_object.do_handshake)
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\streams\tls.py", line 180, in _call_sslobject_method
    data = await self.transport_stream.receive()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 1254, in receive
    await self._protocol.read_event.wait()
  File "C:\Program Files\Python313\Lib\asyncio\locks.py", line 213, in wait
    await fut
asyncio.exceptions.CancelledError: Cancelled by cancel scope 1ba5f804d60

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 78, in start_tls
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 68, in start_tls
    with anyio.fail_after(timeout):
         ~~~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_tasks.py", line 118, in fail_after
    raise TimeoutError
TimeoutError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http_proxy.py", line 299, in handle_async_request
    stream = await stream.start_tls(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 66, in start_tls
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectTimeout

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectTimeout

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_application.py", line 1124, in process_update
    await coroutine
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_handler.py", line 141, in handle_update
    return await self.callback(update, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\bott\ranking_ui.py", line 469, in ranking_callback_handler
    await query.answer()
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_callbackquery.py", line 180, in answer
    return await self.get_bot().answer_callback_query(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 773, in answer_callback_query
    return await super().answer_callback_query(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3306, in answer_callback_query
    return await self._post(
           ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 233, in do_request
    raise TimedOut from err
telegram.error.TimedOut: Timed out
2025-09-03 05:34:33,347 - confession_bot.error_handler - ERROR - notify_admins_of_error:308 - Failed to notify admin 1298849354 of error: Can't parse entities: can't find end of the entity starting at byte offset 373
2025-09-03 05:34:34,008 - confession_bot.error_handler - ERROR - notify_admins_of_error:308 - Failed to notify admin 7085119805 of error: Can't parse entities: can't find end of the entity starting at byte offset 373
2025-09-03 05:34:36,117 - confession_bot.error_handler - ERROR - notify_admins_of_error:308 - Failed to notify admin 6261688120 of error: Can't parse entities: can't find end of the entity starting at byte offset 373
2025-09-03 05:34:38,159 - confession_bot.error_handler - ERROR - global_error_handler:406 - Failed to send error message to user
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\streams\tls.py", line 173, in _call_sslobject_method
    result = func(*args)
  File "C:\Program Files\Python313\Lib\ssl.py", line 951, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
ssl.SSLWantReadError: The operation did not complete (read) (_ssl.c:1028)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_tasks.py", line 115, in fail_after
    yield cancel_scope
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 69, in start_tls
    ssl_stream = await anyio.streams.tls.TLSStream.wrap(
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\streams\tls.py", line 165, in wrap
    await wrapper._call_sslobject_method(ssl_object.do_handshake)
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\streams\tls.py", line 180, in _call_sslobject_method
    data = await self.transport_stream.receive()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 1254, in receive
    await self._protocol.read_event.wait()
  File "C:\Program Files\Python313\Lib\asyncio\locks.py", line 213, in wait
    await fut
asyncio.exceptions.CancelledError: Cancelled by cancel scope 1ba5f804d60

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 78, in start_tls
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 68, in start_tls
    with anyio.fail_after(timeout):
         ~~~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_tasks.py", line 118, in fail_after
    raise TimeoutError
TimeoutError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http_proxy.py", line 299, in handle_async_request
    stream = await stream.start_tls(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 66, in start_tls
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectTimeout

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectTimeout

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_application.py", line 1124, in process_update
    await coroutine
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_handler.py", line 141, in handle_update
    return await self.callback(update, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\bott\ranking_ui.py", line 469, in ranking_callback_handler
    await query.answer()
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_callbackquery.py", line 180, in answer
    return await self.get_bot().answer_callback_query(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 773, in answer_callback_query
    return await super().answer_callback_query(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3306, in answer_callback_query
    return await self._post(
           ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 233, in do_request
    raise TimedOut from err
telegram.error.TimedOut: Timed out

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\sende\Desktop\bott\error_handler.py", line 401, in global_error_handler
    await update.callback_query.answer(
    ...<2 lines>...
    )
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_callbackquery.py", line 180, in answer
    return await self.get_bot().answer_callback_query(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 773, in answer_callback_query
    return await super().answer_callback_query(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3306, in answer_callback_query
    return await self._post(
           ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 328, in _request_wrapper
    raise BadRequest(message)
telegram.error.BadRequest: Query is too old and response timeout expired or query id is invalid
2025-09-03 05:34:44,824 - confession_bot.ranking_system - ERROR - get_user_achievements:604 - Failed to get achievements for user 1298849354: no such column: earned_date
2025-09-03 05:36:33,602 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http_proxy.py", line 299, in handle_async_request
    stream = await stream.start_tls(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 78, in start_tls
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 69, in start_tls
    ssl_stream = await anyio.streams.tls.TLSStream.wrap(
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\streams\tls.py", line 165, in wrap
    await wrapper._call_sslobject_method(ssl_object.do_handshake)
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\streams\tls.py", line 204, in _call_sslobject_method
    raise EndOfStream from None
anyio.EndOfStream

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 293, in _request_wrapper
    raise NetworkError(f"Unknown error in HTTP implementation: {repr(exc)}") from exc
telegram.error.NetworkError: Unknown error in HTTP implementation: EndOfStream()
2025-09-03 05:38:22,620 - confession_bot.ranking_system - ERROR - get_user_achievements:604 - Failed to get achievements for user 1298849354: no such column: earned_date
2025-09-03 05:38:39,204 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\streams\tls.py", line 173, in _call_sslobject_method
    result = func(*args)
  File "C:\Program Files\Python313\Lib\ssl.py", line 951, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
ssl.SSLWantReadError: The operation did not complete (read) (_ssl.c:1028)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_tasks.py", line 115, in fail_after
    yield cancel_scope
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 69, in start_tls
    ssl_stream = await anyio.streams.tls.TLSStream.wrap(
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\streams\tls.py", line 165, in wrap
    await wrapper._call_sslobject_method(ssl_object.do_handshake)
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\streams\tls.py", line 180, in _call_sslobject_method
    data = await self.transport_stream.receive()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 1254, in receive
    await self._protocol.read_event.wait()
  File "C:\Program Files\Python313\Lib\asyncio\locks.py", line 213, in wait
    await fut
asyncio.exceptions.CancelledError: Cancelled by cancel scope 21ff76a4aa0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 78, in start_tls
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 68, in start_tls
    with anyio.fail_after(timeout):
         ~~~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_tasks.py", line 118, in fail_after
    raise TimeoutError
TimeoutError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http_proxy.py", line 299, in handle_async_request
    stream = await stream.start_tls(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 66, in start_tls
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectTimeout

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectTimeout

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_application.py", line 1124, in process_update
    await coroutine
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_handler.py", line 141, in handle_update
    return await self.callback(update, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\bott\ranking_ui.py", line 469, in ranking_callback_handler
    await query.answer()
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_callbackquery.py", line 180, in answer
    return await self.get_bot().answer_callback_query(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 773, in answer_callback_query
    return await super().answer_callback_query(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3306, in answer_callback_query
    return await self._post(
           ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 233, in do_request
    raise TimedOut from err
telegram.error.TimedOut: Timed out
2025-09-03 05:38:45,457 - confession_bot.error_handler - ERROR - notify_admins_of_error:308 - Failed to notify admin 1298849354 of error: Can't parse entities: can't find end of the entity starting at byte offset 373
2025-09-03 05:38:48,117 - confession_bot.error_handler - ERROR - notify_admins_of_error:308 - Failed to notify admin 7085119805 of error: Can't parse entities: can't find end of the entity starting at byte offset 373
2025-09-03 05:38:51,191 - confession_bot.error_handler - ERROR - notify_admins_of_error:308 - Failed to notify admin 6261688120 of error: Can't parse entities: can't find end of the entity starting at byte offset 373
2025-09-03 05:38:52,830 - confession_bot.error_handler - ERROR - global_error_handler:406 - Failed to send error message to user
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\streams\tls.py", line 173, in _call_sslobject_method
    result = func(*args)
  File "C:\Program Files\Python313\Lib\ssl.py", line 951, in do_handshake
    self._sslobj.do_handshake()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
ssl.SSLWantReadError: The operation did not complete (read) (_ssl.c:1028)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_tasks.py", line 115, in fail_after
    yield cancel_scope
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 69, in start_tls
    ssl_stream = await anyio.streams.tls.TLSStream.wrap(
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\streams\tls.py", line 165, in wrap
    await wrapper._call_sslobject_method(ssl_object.do_handshake)
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\streams\tls.py", line 180, in _call_sslobject_method
    data = await self.transport_stream.receive()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 1254, in receive
    await self._protocol.read_event.wait()
  File "C:\Program Files\Python313\Lib\asyncio\locks.py", line 213, in wait
    await fut
asyncio.exceptions.CancelledError: Cancelled by cancel scope 21ff76a4aa0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 78, in start_tls
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 68, in start_tls
    with anyio.fail_after(timeout):
         ~~~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_tasks.py", line 118, in fail_after
    raise TimeoutError
TimeoutError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http_proxy.py", line 299, in handle_async_request
    stream = await stream.start_tls(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 66, in start_tls
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectTimeout

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectTimeout

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_application.py", line 1124, in process_update
    await coroutine
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_handler.py", line 141, in handle_update
    return await self.callback(update, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\bott\ranking_ui.py", line 469, in ranking_callback_handler
    await query.answer()
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_callbackquery.py", line 180, in answer
    return await self.get_bot().answer_callback_query(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 773, in answer_callback_query
    return await super().answer_callback_query(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3306, in answer_callback_query
    return await self._post(
           ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 233, in do_request
    raise TimedOut from err
telegram.error.TimedOut: Timed out

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\sende\Desktop\bott\error_handler.py", line 401, in global_error_handler
    await update.callback_query.answer(
    ...<2 lines>...
    )
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_callbackquery.py", line 180, in answer
    return await self.get_bot().answer_callback_query(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 773, in answer_callback_query
    return await super().answer_callback_query(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3306, in answer_callback_query
    return await self._post(
           ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 328, in _request_wrapper
    raise BadRequest(message)
telegram.error.BadRequest: Query is too old and response timeout expired or query id is invalid
2025-09-03 05:39:06,756 - confession_bot.ranking_ui - ERROR - show_ranking_menu:237 - Error editing message: Message is not modified: specified new message content and reply markup are exactly the same as a current content and reply markup of the message
2025-09-03 05:39:09,722 - confession_bot.ranking_system - ERROR - get_user_achievements:604 - Failed to get achievements for user 1298849354: no such column: earned_date
2025-09-03 05:53:29,146 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http_proxy.py", line 299, in handle_async_request
    stream = await stream.start_tls(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 78, in start_tls
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 69, in start_tls
    ssl_stream = await anyio.streams.tls.TLSStream.wrap(
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\streams\tls.py", line 165, in wrap
    await wrapper._call_sslobject_method(ssl_object.do_handshake)
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\streams\tls.py", line 204, in _call_sslobject_method
    raise EndOfStream from None
anyio.EndOfStream

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 293, in _request_wrapper
    raise NetworkError(f"Unknown error in HTTP implementation: {repr(exc)}") from exc
telegram.error.NetworkError: Unknown error in HTTP implementation: EndOfStream()
2025-09-03 05:54:35,434 - confession_bot.error_handler - ERROR - wrapper:149 - Request timed out: Timed out
2025-09-03 05:54:42,384 - confession_bot.error_handler - ERROR - wrapper:149 - Request timed out: Timed out
2025-09-03 05:54:49,745 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '(' is reserved and must be escaped with the preceding '\'
2025-09-03 05:55:23,745 - confession_bot.error_handler - ERROR - wrapper:149 - Request timed out: Timed out
2025-09-03 05:55:36,379 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '(' is reserved and must be escaped with the preceding '\'
2025-09-03 05:56:01,343 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '(' is reserved and must be escaped with the preceding '\'
2025-09-03 05:56:43,919 - confession_bot.error_handler - ERROR - wrapper:149 - Request timed out: Timed out
2025-09-03 05:58:07,188 - confession_bot.error_handler - ERROR - wrapper:149 - Request timed out: Timed out
2025-09-03 05:58:18,885 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '(' is reserved and must be escaped with the preceding '\'
2025-09-03 05:58:30,031 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '(' is reserved and must be escaped with the preceding '\'
2025-09-03 06:15:03,613 - confession_bot.error_handler - ERROR - wrapper:149 - Request timed out: Timed out
2025-09-03 06:15:34,145 - confession_bot.error_handler - ERROR - wrapper:149 - Request timed out: Timed out
2025-09-03 06:15:53,903 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '(' is reserved and must be escaped with the preceding '\'
2025-09-03 06:17:56,275 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '(' is reserved and must be escaped with the preceding '\'
2025-09-03 06:22:06,746 - confession_bot.error_handler - ERROR - wrapper:149 - Request timed out: Timed out
2025-09-03 06:22:39,737 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '(' is reserved and must be escaped with the preceding '\'
2025-09-03 10:15:02,182 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '(' is reserved and must be escaped with the preceding '\'
2025-09-03 10:15:26,456 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Message is not modified: specified new message content and reply markup are exactly the same as a current content and reply markup of the message
2025-09-03 10:15:31,879 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-03 10:15:48,146 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-03 10:15:48,243 - confession_bot.ranking_integration - ERROR - check_and_notify_rank_up:277 - Error checking rank up: no such table: rank_history
2025-09-03 10:15:48,336 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-03 10:26:13,424 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '(' is reserved and must be escaped with the preceding '\'
2025-09-03 10:34:59,598 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '(' is reserved and must be escaped with the preceding '\'
2025-09-03 10:35:15,398 - confession_bot.ranking_system - ERROR - get_user_achievements:604 - Failed to get achievements for user 1298849354: no such column: earned_date
2025-09-03 10:35:29,125 - confession_bot.ranking_system - ERROR - get_user_achievements:604 - Failed to get achievements for user 1298849354: no such column: earned_date
2025-09-03 10:35:48,373 - confession_bot.ranking_system - ERROR - get_user_achievements:604 - Failed to get achievements for user 1298849354: no such column: earned_date
2025-09-03 10:59:50,664 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '(' is reserved and must be escaped with the preceding '\'
2025-09-03 11:14:13,855 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-03 11:14:22,642 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '-' is reserved and must be escaped with the preceding '\'
2025-09-03 11:14:27,334 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '-' is reserved and must be escaped with the preceding '\'
2025-09-03 11:14:32,902 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-03 11:16:49,342 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-03 11:16:54,709 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '-' is reserved and must be escaped with the preceding '\'
2025-09-03 11:16:59,112 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '-' is reserved and must be escaped with the preceding '\'
2025-09-03 11:17:05,431 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-03 11:33:34,371 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-03 11:33:52,531 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '-' is reserved and must be escaped with the preceding '\'
2025-09-03 11:33:58,871 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '-' is reserved and must be escaped with the preceding '\'
2025-09-03 11:34:05,154 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-03 11:46:50,892 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-03 12:08:49,210 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-03 12:08:53,629 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '-' is reserved and must be escaped with the preceding '\'
2025-09-03 12:08:57,481 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '-' is reserved and must be escaped with the preceding '\'
2025-09-03 12:09:02,281 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-03 12:12:20,220 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-03 12:12:23,118 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '-' is reserved and must be escaped with the preceding '\'
2025-09-03 12:12:26,530 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '-' is reserved and must be escaped with the preceding '\'
2025-09-03 12:12:29,279 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-03 12:23:51,643 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-03 12:23:57,113 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '-' is reserved and must be escaped with the preceding '\'
2025-09-03 12:23:58,925 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '-' is reserved and must be escaped with the preceding '\'
2025-09-03 12:24:00,394 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-03 13:52:57,189 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-03 13:53:03,796 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '-' is reserved and must be escaped with the preceding '\'
2025-09-03 13:55:32,601 - confession_bot.error_handler - ERROR - wrapper:149 - Request timed out: Timed out
2025-09-03 13:57:39,880 - confession_bot.error_handler - ERROR - wrapper:149 - Request timed out: Timed out
2025-09-03 13:57:59,681 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '-' is reserved and must be escaped with the preceding '\'
2025-09-03 13:58:03,626 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-03 13:58:07,464 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '-' is reserved and must be escaped with the preceding '\'
2025-09-03 14:02:35,796 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-03 14:02:41,385 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-03 23:38:48,495 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Message is not modified: specified new message content and reply markup are exactly the same as a current content and reply markup of the message
2025-09-03 23:39:02,743 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-03 23:39:12,420 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-03 23:39:12,532 - confession_bot.ranking_integration - ERROR - check_and_notify_rank_up:277 - Error checking rank up: no such table: rank_history
2025-09-03 23:39:12,650 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-03 23:45:29,755 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-03 23:45:38,146 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-03 23:45:38,252 - confession_bot.ranking_integration - ERROR - check_and_notify_rank_up:277 - Error checking rank up: no such table: rank_history
2025-09-03 23:45:38,345 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-03 23:46:10,381 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-03 23:46:21,353 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-03 23:46:21,463 - confession_bot.ranking_integration - ERROR - check_and_notify_rank_up:277 - Error checking rank up: no such table: rank_history
2025-09-03 23:46:21,580 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-03 23:52:43,986 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-03 23:52:49,165 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '-' is reserved and must be escaped with the preceding '\'
2025-09-03 23:57:54,116 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-04 00:12:01,322 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '(' is reserved and must be escaped with the preceding '\'
2025-09-04 00:12:53,165 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-04 00:13:01,758 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-04 00:13:01,899 - confession_bot.ranking_integration - ERROR - check_and_notify_rank_up:277 - Error checking rank up: no such table: rank_history
2025-09-04 00:13:02,085 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-04 00:17:28,704 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '!' is reserved and must be escaped with the preceding '\'
2025-09-04 00:18:30,651 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '(' is reserved and must be escaped with the preceding '\'
2025-09-04 00:22:56,210 - confession_bot.error_handler - ERROR - wrapper:221 - Unexpected error in callback_handler: no such column: p.id
Traceback (most recent call last):
  File "C:\Users\sende\Desktop\bott\error_handler.py", line 123, in wrapper
    return await func(update, context, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\bott\bot.py", line 2325, in callback_handler
    await admin_recent_posts(update, context)
  File "C:\Users\sende\Desktop\bott\bot.py", line 3848, in admin_recent_posts
    cursor.execute("""
    ~~~~~~~~~~~~~~^^^^
        SELECT p.id, p.content, p.category, p.timestamp, p.user_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
        LIMIT 15
        ^^^^^^^^
    """)
    ^^^^
sqlite3.OperationalError: no such column: p.id
2025-09-04 00:22:57,151 - confession_bot.error_handler - ERROR - notify_admins_of_error:308 - Failed to notify admin 1298849354 of error: Can't parse entities: can't find end of the entity starting at byte offset 370
2025-09-04 00:22:58,121 - confession_bot.error_handler - ERROR - notify_admins_of_error:308 - Failed to notify admin 7085119805 of error: Can't parse entities: can't find end of the entity starting at byte offset 370
2025-09-04 00:22:58,940 - confession_bot.error_handler - ERROR - notify_admins_of_error:308 - Failed to notify admin 6261688120 of error: Can't parse entities: can't find end of the entity starting at byte offset 370
2025-09-04 00:26:28,017 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-04 00:27:02,145 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '(' is reserved and must be escaped with the preceding '\'
2025-09-04 00:29:16,410 - confession_bot.ranking_system - ERROR - get_user_achievements:604 - Failed to get achievements for user 1298849354: no such column: earned_date
2025-09-04 01:19:46,575 - confession_bot.error_handler - ERROR - wrapper:221 - Unexpected error in callback_handler: no such column: p.id
Traceback (most recent call last):
  File "C:\Users\sende\Desktop\bott\error_handler.py", line 123, in wrapper
    return await func(update, context, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\bott\bot.py", line 2325, in callback_handler
    await admin_recent_posts(update, context)
  File "C:\Users\sende\Desktop\bott\bot.py", line 3867, in admin_recent_posts
    cursor.execute("""
    ~~~~~~~~~~~~~~^^^^
        SELECT p.id, p.content, p.category, p.timestamp, p.user_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
        LIMIT 15
        ^^^^^^^^
    """)
    ^^^^
sqlite3.OperationalError: no such column: p.id
2025-09-04 01:19:49,304 - confession_bot.error_handler - ERROR - notify_admins_of_error:308 - Failed to notify admin 1298849354 of error: Can't parse entities: can't find end of the entity starting at byte offset 370
2025-09-04 01:19:50,139 - confession_bot.error_handler - ERROR - notify_admins_of_error:308 - Failed to notify admin 7085119805 of error: Can't parse entities: can't find end of the entity starting at byte offset 370
2025-09-04 01:19:50,952 - confession_bot.error_handler - ERROR - notify_admins_of_error:308 - Failed to notify admin 6261688120 of error: Can't parse entities: can't find end of the entity starting at byte offset 370
2025-09-04 01:20:40,296 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '(' is reserved and must be escaped with the preceding '\'
2025-09-04 01:23:02,678 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '(' is reserved and must be escaped with the preceding '\'
2025-09-04 01:25:24,745 - confession_bot.error_handler - ERROR - wrapper:221 - Unexpected error in callback_handler: no such column: p.id
Traceback (most recent call last):
  File "C:\Users\sende\Desktop\bott\error_handler.py", line 123, in wrapper
    return await func(update, context, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\bott\bot.py", line 2325, in callback_handler
    await admin_recent_posts(update, context)
  File "C:\Users\sende\Desktop\bott\bot.py", line 3867, in admin_recent_posts
    cursor.execute("""
    ~~~~~~~~~~~~~~^^^^
        SELECT p.id, p.content, p.category, p.timestamp, p.user_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
        LIMIT 15
        ^^^^^^^^
    """)
    ^^^^
sqlite3.OperationalError: no such column: p.id
2025-09-04 01:25:25,604 - confession_bot.error_handler - ERROR - notify_admins_of_error:308 - Failed to notify admin 1298849354 of error: Can't parse entities: can't find end of the entity starting at byte offset 370
2025-09-04 01:25:26,403 - confession_bot.error_handler - ERROR - notify_admins_of_error:308 - Failed to notify admin 7085119805 of error: Can't parse entities: can't find end of the entity starting at byte offset 370
2025-09-04 01:25:27,651 - confession_bot.error_handler - ERROR - notify_admins_of_error:308 - Failed to notify admin 6261688120 of error: Can't parse entities: can't find end of the entity starting at byte offset 370
2025-09-04 01:28:49,367 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '(' is reserved and must be escaped with the preceding '\'
2025-09-04 01:29:37,283 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '(' is reserved and must be escaped with the preceding '\'
2025-09-04 01:30:08,883 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '(' is reserved and must be escaped with the preceding '\'
2025-09-04 01:41:33,066 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '(' is reserved and must be escaped with the preceding '\'
2025-09-04 01:49:24,376 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '(' is reserved and must be escaped with the preceding '\'
2025-09-04 02:10:29,134 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 02:10:33,945 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 02:10:35,751 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 02:10:41,175 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 02:10:43,506 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 02:10:46,551 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 02:10:51,344 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 02:10:55,530 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 02:11:00,389 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 02:11:02,670 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '(' is reserved and must be escaped with the preceding '\'
2025-09-04 02:11:07,130 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 02:11:11,935 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 02:13:52,679 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '(' is reserved and must be escaped with the preceding '\'
2025-09-04 02:14:47,762 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '(' is reserved and must be escaped with the preceding '\'
2025-09-04 02:16:18,010 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '(' is reserved and must be escaped with the preceding '\'
2025-09-04 02:17:22,542 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '(' is reserved and must be escaped with the preceding '\'
2025-09-04 02:23:45,485 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '(' is reserved and must be escaped with the preceding '\'
2025-09-04 02:25:34,965 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '#' is reserved and must be escaped with the preceding '\'
2025-09-04 02:29:29,504 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-04 02:32:27,783 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-04 02:37:48,400 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-04 02:40:27,208 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-04 02:40:38,002 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-04 02:40:38,123 - confession_bot.ranking_integration - ERROR - check_and_notify_rank_up:277 - Error checking rank up: no such table: rank_history
2025-09-04 02:40:38,277 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-04 02:41:33,361 - confession_bot.ranking_system - ERROR - get_user_achievements:604 - Failed to get achievements for user 1298849354: no such column: earned_date
2025-09-04 02:41:54,659 - confession_bot.ranking_system - ERROR - get_user_achievements:604 - Failed to get achievements for user 1298849354: no such column: earned_date
2025-09-04 02:45:12,411 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 02:45:17,356 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 02:45:19,240 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 02:46:14,261 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-04 02:46:17,946 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-04 02:49:47,926 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-04 02:50:27,191 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-04 03:03:29,943 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-04 03:09:30,190 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-04 03:25:42,193 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-04 03:38:19,047 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-04 03:42:28,909 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-04 03:45:57,221 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-04 03:48:51,051 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-04 03:48:59,147 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '(' is reserved and must be escaped with the preceding '\'
2025-09-04 03:50:22,186 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-04 03:50:25,863 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-04 03:51:14,486 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-04 03:51:28,667 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-04 03:51:28,728 - confession_bot.ranking_integration - ERROR - check_and_notify_rank_up:277 - Error checking rank up: no such table: rank_history
2025-09-04 03:51:28,886 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-04 03:52:19,974 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-04 03:52:31,022 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-04 03:52:31,103 - confession_bot.ranking_integration - ERROR - check_and_notify_rank_up:277 - Error checking rank up: no such table: rank_history
2025-09-04 03:52:31,395 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-04 03:56:56,180 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http_proxy.py", line 326, in handle_async_request
    return await self._connection.handle_async_request(request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http11.py", line 121, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http11.py", line 99, in handle_async_request
    ) = await self._receive_response_headers(**kwargs)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http11.py", line 164, in _receive_response_headers
    event = await self._receive_event(timeout=timeout)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http11.py", line 214, in _receive_event
    raise RemoteProtocolError(msg)
httpcore.RemoteProtocolError: Server disconnected without sending a response.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.RemoteProtocolError: Server disconnected without sending a response.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.RemoteProtocolError: Server disconnected without sending a response.
2025-09-04 03:56:59,283 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 182, in try_connect
    stream = await asynclib.connect_tcp(remote_host, remote_port, local_address)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2596, in connect_tcp
    await get_running_loop().create_connection(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        StreamProtocol, host, port, local_addr=local_address
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ),
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1166, in create_connection
    raise exceptions[0]
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1141, in create_connection
    sock = await self._connect_sock(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
        exceptions, addrinfo, laddr_infos)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1044, in _connect_sock
    await self.sock_connect(sock, address)
  File "C:\Program Files\Python313\Lib\asyncio\proactor_events.py", line 726, in sock_connect
    return await self._proactor.connect(sock, address)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 804, in _poll
    value = callback(transferred, key, ov)
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 600, in finish_connect
    ov.getresult()
    ~~~~~~~~~~~~^^
ConnectionRefusedError: [WinError 1225] The remote computer refused the network connection

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 248, in connect_tcp
    raise OSError("All connection attempts failed") from cause
OSError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http_proxy.py", line 271, in handle_async_request
    connect_response = await self._connection.handle_async_request(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        connect_request
        ^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: All connection attempts failed
2025-09-04 03:57:03,592 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 182, in try_connect
    stream = await asynclib.connect_tcp(remote_host, remote_port, local_address)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2596, in connect_tcp
    await get_running_loop().create_connection(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        StreamProtocol, host, port, local_addr=local_address
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ),
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1166, in create_connection
    raise exceptions[0]
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1141, in create_connection
    sock = await self._connect_sock(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
        exceptions, addrinfo, laddr_infos)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1044, in _connect_sock
    await self.sock_connect(sock, address)
  File "C:\Program Files\Python313\Lib\asyncio\proactor_events.py", line 726, in sock_connect
    return await self._proactor.connect(sock, address)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 804, in _poll
    value = callback(transferred, key, ov)
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 600, in finish_connect
    ov.getresult()
    ~~~~~~~~~~~~^^
ConnectionRefusedError: [WinError 1225] The remote computer refused the network connection

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 248, in connect_tcp
    raise OSError("All connection attempts failed") from cause
OSError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http_proxy.py", line 271, in handle_async_request
    connect_response = await self._connection.handle_async_request(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        connect_request
        ^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: All connection attempts failed
2025-09-04 03:57:07,896 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 182, in try_connect
    stream = await asynclib.connect_tcp(remote_host, remote_port, local_address)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2596, in connect_tcp
    await get_running_loop().create_connection(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        StreamProtocol, host, port, local_addr=local_address
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ),
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1166, in create_connection
    raise exceptions[0]
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1141, in create_connection
    sock = await self._connect_sock(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
        exceptions, addrinfo, laddr_infos)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1044, in _connect_sock
    await self.sock_connect(sock, address)
  File "C:\Program Files\Python313\Lib\asyncio\proactor_events.py", line 726, in sock_connect
    return await self._proactor.connect(sock, address)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 804, in _poll
    value = callback(transferred, key, ov)
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 600, in finish_connect
    ov.getresult()
    ~~~~~~~~~~~~^^
ConnectionRefusedError: [WinError 1225] The remote computer refused the network connection

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 248, in connect_tcp
    raise OSError("All connection attempts failed") from cause
OSError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http_proxy.py", line 271, in handle_async_request
    connect_response = await self._connection.handle_async_request(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        connect_request
        ^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: All connection attempts failed
2025-09-04 03:57:13,353 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 182, in try_connect
    stream = await asynclib.connect_tcp(remote_host, remote_port, local_address)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2596, in connect_tcp
    await get_running_loop().create_connection(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        StreamProtocol, host, port, local_addr=local_address
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ),
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1166, in create_connection
    raise exceptions[0]
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1141, in create_connection
    sock = await self._connect_sock(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
        exceptions, addrinfo, laddr_infos)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1044, in _connect_sock
    await self.sock_connect(sock, address)
  File "C:\Program Files\Python313\Lib\asyncio\proactor_events.py", line 726, in sock_connect
    return await self._proactor.connect(sock, address)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 804, in _poll
    value = callback(transferred, key, ov)
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 600, in finish_connect
    ov.getresult()
    ~~~~~~~~~~~~^^
ConnectionRefusedError: [WinError 1225] The remote computer refused the network connection

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 248, in connect_tcp
    raise OSError("All connection attempts failed") from cause
OSError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http_proxy.py", line 271, in handle_async_request
    connect_response = await self._connection.handle_async_request(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        connect_request
        ^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: All connection attempts failed
2025-09-04 03:57:20,495 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 182, in try_connect
    stream = await asynclib.connect_tcp(remote_host, remote_port, local_address)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2596, in connect_tcp
    await get_running_loop().create_connection(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        StreamProtocol, host, port, local_addr=local_address
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ),
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1166, in create_connection
    raise exceptions[0]
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1141, in create_connection
    sock = await self._connect_sock(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
        exceptions, addrinfo, laddr_infos)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1044, in _connect_sock
    await self.sock_connect(sock, address)
  File "C:\Program Files\Python313\Lib\asyncio\proactor_events.py", line 726, in sock_connect
    return await self._proactor.connect(sock, address)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 804, in _poll
    value = callback(transferred, key, ov)
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 600, in finish_connect
    ov.getresult()
    ~~~~~~~~~~~~^^
ConnectionRefusedError: [WinError 1225] The remote computer refused the network connection

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 248, in connect_tcp
    raise OSError("All connection attempts failed") from cause
OSError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http_proxy.py", line 271, in handle_async_request
    connect_response = await self._connection.handle_async_request(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        connect_request
        ^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: All connection attempts failed
2025-09-04 03:57:30,132 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 182, in try_connect
    stream = await asynclib.connect_tcp(remote_host, remote_port, local_address)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2596, in connect_tcp
    await get_running_loop().create_connection(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        StreamProtocol, host, port, local_addr=local_address
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ),
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1166, in create_connection
    raise exceptions[0]
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1141, in create_connection
    sock = await self._connect_sock(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
        exceptions, addrinfo, laddr_infos)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1044, in _connect_sock
    await self.sock_connect(sock, address)
  File "C:\Program Files\Python313\Lib\asyncio\proactor_events.py", line 726, in sock_connect
    return await self._proactor.connect(sock, address)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 804, in _poll
    value = callback(transferred, key, ov)
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 600, in finish_connect
    ov.getresult()
    ~~~~~~~~~~~~^^
ConnectionRefusedError: [WinError 1225] The remote computer refused the network connection

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 248, in connect_tcp
    raise OSError("All connection attempts failed") from cause
OSError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http_proxy.py", line 271, in handle_async_request
    connect_response = await self._connection.handle_async_request(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        connect_request
        ^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: All connection attempts failed
2025-09-04 03:57:43,594 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 182, in try_connect
    stream = await asynclib.connect_tcp(remote_host, remote_port, local_address)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2596, in connect_tcp
    await get_running_loop().create_connection(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        StreamProtocol, host, port, local_addr=local_address
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ),
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1166, in create_connection
    raise exceptions[0]
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1141, in create_connection
    sock = await self._connect_sock(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
        exceptions, addrinfo, laddr_infos)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1044, in _connect_sock
    await self.sock_connect(sock, address)
  File "C:\Program Files\Python313\Lib\asyncio\proactor_events.py", line 726, in sock_connect
    return await self._proactor.connect(sock, address)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 804, in _poll
    value = callback(transferred, key, ov)
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 600, in finish_connect
    ov.getresult()
    ~~~~~~~~~~~~^^
ConnectionRefusedError: [WinError 1225] The remote computer refused the network connection

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 248, in connect_tcp
    raise OSError("All connection attempts failed") from cause
OSError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http_proxy.py", line 271, in handle_async_request
    connect_response = await self._connection.handle_async_request(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        connect_request
        ^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: All connection attempts failed
2025-09-04 03:58:02,770 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 182, in try_connect
    stream = await asynclib.connect_tcp(remote_host, remote_port, local_address)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2596, in connect_tcp
    await get_running_loop().create_connection(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        StreamProtocol, host, port, local_addr=local_address
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ),
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1166, in create_connection
    raise exceptions[0]
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1141, in create_connection
    sock = await self._connect_sock(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
        exceptions, addrinfo, laddr_infos)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1044, in _connect_sock
    await self.sock_connect(sock, address)
  File "C:\Program Files\Python313\Lib\asyncio\proactor_events.py", line 726, in sock_connect
    return await self._proactor.connect(sock, address)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 804, in _poll
    value = callback(transferred, key, ov)
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 600, in finish_connect
    ov.getresult()
    ~~~~~~~~~~~~^^
ConnectionRefusedError: [WinError 1225] The remote computer refused the network connection

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 248, in connect_tcp
    raise OSError("All connection attempts failed") from cause
OSError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http_proxy.py", line 271, in handle_async_request
    connect_response = await self._connection.handle_async_request(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        connect_request
        ^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: All connection attempts failed
2025-09-04 03:58:30,448 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 182, in try_connect
    stream = await asynclib.connect_tcp(remote_host, remote_port, local_address)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2596, in connect_tcp
    await get_running_loop().create_connection(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        StreamProtocol, host, port, local_addr=local_address
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ),
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1166, in create_connection
    raise exceptions[0]
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1141, in create_connection
    sock = await self._connect_sock(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
        exceptions, addrinfo, laddr_infos)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1044, in _connect_sock
    await self.sock_connect(sock, address)
  File "C:\Program Files\Python313\Lib\asyncio\proactor_events.py", line 726, in sock_connect
    return await self._proactor.connect(sock, address)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 804, in _poll
    value = callback(transferred, key, ov)
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 600, in finish_connect
    ov.getresult()
    ~~~~~~~~~~~~^^
ConnectionRefusedError: [WinError 1225] The remote computer refused the network connection

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 248, in connect_tcp
    raise OSError("All connection attempts failed") from cause
OSError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http_proxy.py", line 271, in handle_async_request
    connect_response = await self._connection.handle_async_request(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        connect_request
        ^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: All connection attempts failed
2025-09-04 03:58:30,571 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 10 errors
2025-09-04 03:59:02,513 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 182, in try_connect
    stream = await asynclib.connect_tcp(remote_host, remote_port, local_address)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2596, in connect_tcp
    await get_running_loop().create_connection(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        StreamProtocol, host, port, local_addr=local_address
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ),
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1166, in create_connection
    raise exceptions[0]
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1141, in create_connection
    sock = await self._connect_sock(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
        exceptions, addrinfo, laddr_infos)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1044, in _connect_sock
    await self.sock_connect(sock, address)
  File "C:\Program Files\Python313\Lib\asyncio\proactor_events.py", line 726, in sock_connect
    return await self._proactor.connect(sock, address)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 804, in _poll
    value = callback(transferred, key, ov)
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 600, in finish_connect
    ov.getresult()
    ~~~~~~~~~~~~^^
ConnectionRefusedError: [WinError 1225] The remote computer refused the network connection

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 248, in connect_tcp
    raise OSError("All connection attempts failed") from cause
OSError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http_proxy.py", line 271, in handle_async_request
    connect_response = await self._connection.handle_async_request(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        connect_request
        ^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: All connection attempts failed
2025-09-04 03:59:02,615 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 11 errors
2025-09-04 03:59:34,572 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 182, in try_connect
    stream = await asynclib.connect_tcp(remote_host, remote_port, local_address)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2596, in connect_tcp
    await get_running_loop().create_connection(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        StreamProtocol, host, port, local_addr=local_address
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ),
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1166, in create_connection
    raise exceptions[0]
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1141, in create_connection
    sock = await self._connect_sock(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
        exceptions, addrinfo, laddr_infos)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1044, in _connect_sock
    await self.sock_connect(sock, address)
  File "C:\Program Files\Python313\Lib\asyncio\proactor_events.py", line 726, in sock_connect
    return await self._proactor.connect(sock, address)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 804, in _poll
    value = callback(transferred, key, ov)
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 600, in finish_connect
    ov.getresult()
    ~~~~~~~~~~~~^^
ConnectionRefusedError: [WinError 1225] The remote computer refused the network connection

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 248, in connect_tcp
    raise OSError("All connection attempts failed") from cause
OSError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http_proxy.py", line 271, in handle_async_request
    connect_response = await self._connection.handle_async_request(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        connect_request
        ^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: All connection attempts failed
2025-09-04 03:59:34,639 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 12 errors
2025-09-04 04:00:09,616 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 182, in try_connect
    stream = await asynclib.connect_tcp(remote_host, remote_port, local_address)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2596, in connect_tcp
    await get_running_loop().create_connection(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        StreamProtocol, host, port, local_addr=local_address
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ),
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1166, in create_connection
    raise exceptions[0]
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1141, in create_connection
    sock = await self._connect_sock(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
        exceptions, addrinfo, laddr_infos)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1044, in _connect_sock
    await self.sock_connect(sock, address)
  File "C:\Program Files\Python313\Lib\asyncio\proactor_events.py", line 726, in sock_connect
    return await self._proactor.connect(sock, address)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 804, in _poll
    value = callback(transferred, key, ov)
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 600, in finish_connect
    ov.getresult()
    ~~~~~~~~~~~~^^
OSError: [WinError 1232] The network location cannot be reached. For information about network troubleshooting, see Windows Help

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 248, in connect_tcp
    raise OSError("All connection attempts failed") from cause
OSError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http_proxy.py", line 271, in handle_async_request
    connect_response = await self._connection.handle_async_request(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        connect_request
        ^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: All connection attempts failed
2025-09-04 04:00:09,700 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 13 errors
2025-09-04 04:00:10,627 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 182, in try_connect
    stream = await asynclib.connect_tcp(remote_host, remote_port, local_address)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2596, in connect_tcp
    await get_running_loop().create_connection(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        StreamProtocol, host, port, local_addr=local_address
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ),
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1166, in create_connection
    raise exceptions[0]
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1141, in create_connection
    sock = await self._connect_sock(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
        exceptions, addrinfo, laddr_infos)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1044, in _connect_sock
    await self.sock_connect(sock, address)
  File "C:\Program Files\Python313\Lib\asyncio\proactor_events.py", line 726, in sock_connect
    return await self._proactor.connect(sock, address)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 804, in _poll
    value = callback(transferred, key, ov)
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 600, in finish_connect
    ov.getresult()
    ~~~~~~~~~~~~^^
OSError: [WinError 1232] The network location cannot be reached. For information about network troubleshooting, see Windows Help

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 248, in connect_tcp
    raise OSError("All connection attempts failed") from cause
OSError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http_proxy.py", line 271, in handle_async_request
    connect_response = await self._connection.handle_async_request(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        connect_request
        ^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: All connection attempts failed
2025-09-04 04:00:10,717 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 14 errors
2025-09-04 04:00:12,136 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 182, in try_connect
    stream = await asynclib.connect_tcp(remote_host, remote_port, local_address)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2596, in connect_tcp
    await get_running_loop().create_connection(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        StreamProtocol, host, port, local_addr=local_address
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ),
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1166, in create_connection
    raise exceptions[0]
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1141, in create_connection
    sock = await self._connect_sock(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
        exceptions, addrinfo, laddr_infos)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1044, in _connect_sock
    await self.sock_connect(sock, address)
  File "C:\Program Files\Python313\Lib\asyncio\proactor_events.py", line 726, in sock_connect
    return await self._proactor.connect(sock, address)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 804, in _poll
    value = callback(transferred, key, ov)
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 600, in finish_connect
    ov.getresult()
    ~~~~~~~~~~~~^^
OSError: [WinError 1232] The network location cannot be reached. For information about network troubleshooting, see Windows Help

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 248, in connect_tcp
    raise OSError("All connection attempts failed") from cause
OSError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http_proxy.py", line 271, in handle_async_request
    connect_response = await self._connection.handle_async_request(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        connect_request
        ^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: All connection attempts failed
2025-09-04 04:00:12,207 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 15 errors
2025-09-04 04:00:14,402 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 182, in try_connect
    stream = await asynclib.connect_tcp(remote_host, remote_port, local_address)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2596, in connect_tcp
    await get_running_loop().create_connection(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        StreamProtocol, host, port, local_addr=local_address
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ),
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1166, in create_connection
    raise exceptions[0]
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1141, in create_connection
    sock = await self._connect_sock(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
        exceptions, addrinfo, laddr_infos)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1044, in _connect_sock
    await self.sock_connect(sock, address)
  File "C:\Program Files\Python313\Lib\asyncio\proactor_events.py", line 726, in sock_connect
    return await self._proactor.connect(sock, address)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 804, in _poll
    value = callback(transferred, key, ov)
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 600, in finish_connect
    ov.getresult()
    ~~~~~~~~~~~~^^
OSError: [WinError 1232] The network location cannot be reached. For information about network troubleshooting, see Windows Help

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 248, in connect_tcp
    raise OSError("All connection attempts failed") from cause
OSError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http_proxy.py", line 271, in handle_async_request
    connect_response = await self._connection.handle_async_request(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        connect_request
        ^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: All connection attempts failed
2025-09-04 04:00:14,468 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 16 errors
2025-09-04 04:00:17,791 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 182, in try_connect
    stream = await asynclib.connect_tcp(remote_host, remote_port, local_address)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2596, in connect_tcp
    await get_running_loop().create_connection(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        StreamProtocol, host, port, local_addr=local_address
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ),
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1166, in create_connection
    raise exceptions[0]
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1141, in create_connection
    sock = await self._connect_sock(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
        exceptions, addrinfo, laddr_infos)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1044, in _connect_sock
    await self.sock_connect(sock, address)
  File "C:\Program Files\Python313\Lib\asyncio\proactor_events.py", line 726, in sock_connect
    return await self._proactor.connect(sock, address)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 804, in _poll
    value = callback(transferred, key, ov)
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 600, in finish_connect
    ov.getresult()
    ~~~~~~~~~~~~^^
OSError: [WinError 1232] The network location cannot be reached. For information about network troubleshooting, see Windows Help

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 248, in connect_tcp
    raise OSError("All connection attempts failed") from cause
OSError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http_proxy.py", line 271, in handle_async_request
    connect_response = await self._connection.handle_async_request(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        connect_request
        ^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: All connection attempts failed
2025-09-04 04:00:17,865 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 17 errors
2025-09-04 04:00:22,865 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 182, in try_connect
    stream = await asynclib.connect_tcp(remote_host, remote_port, local_address)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2596, in connect_tcp
    await get_running_loop().create_connection(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        StreamProtocol, host, port, local_addr=local_address
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ),
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1166, in create_connection
    raise exceptions[0]
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1141, in create_connection
    sock = await self._connect_sock(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
        exceptions, addrinfo, laddr_infos)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1044, in _connect_sock
    await self.sock_connect(sock, address)
  File "C:\Program Files\Python313\Lib\asyncio\proactor_events.py", line 726, in sock_connect
    return await self._proactor.connect(sock, address)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 804, in _poll
    value = callback(transferred, key, ov)
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 600, in finish_connect
    ov.getresult()
    ~~~~~~~~~~~~^^
OSError: [WinError 1232] The network location cannot be reached. For information about network troubleshooting, see Windows Help

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 248, in connect_tcp
    raise OSError("All connection attempts failed") from cause
OSError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http_proxy.py", line 271, in handle_async_request
    connect_response = await self._connection.handle_async_request(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        connect_request
        ^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: All connection attempts failed
2025-09-04 04:00:22,948 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 18 errors
2025-09-04 04:00:32,529 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 182, in try_connect
    stream = await asynclib.connect_tcp(remote_host, remote_port, local_address)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2596, in connect_tcp
    await get_running_loop().create_connection(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        StreamProtocol, host, port, local_addr=local_address
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ),
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1166, in create_connection
    raise exceptions[0]
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1141, in create_connection
    sock = await self._connect_sock(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
        exceptions, addrinfo, laddr_infos)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1044, in _connect_sock
    await self.sock_connect(sock, address)
  File "C:\Program Files\Python313\Lib\asyncio\proactor_events.py", line 726, in sock_connect
    return await self._proactor.connect(sock, address)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 804, in _poll
    value = callback(transferred, key, ov)
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 600, in finish_connect
    ov.getresult()
    ~~~~~~~~~~~~^^
ConnectionRefusedError: [WinError 1225] The remote computer refused the network connection

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 248, in connect_tcp
    raise OSError("All connection attempts failed") from cause
OSError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\http_proxy.py", line 271, in handle_async_request
    connect_response = await self._connection.handle_async_request(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        connect_request
        ^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: All connection attempts failed
2025-09-04 04:00:32,618 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 19 errors
2025-09-04 04:12:59,425 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-04 04:13:08,723 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-04 04:13:09,733 - confession_bot.ranking_integration - ERROR - check_and_notify_rank_up:277 - Error checking rank up: no such table: rank_history
2025-09-04 04:13:09,877 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-04 04:53:41,641 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 04:53:47,202 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 04:53:49,026 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 04:53:54,546 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 04:53:57,003 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 04:54:00,280 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 05:06:20,290 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Message is not modified: specified new message content and reply markup are exactly the same as a current content and reply markup of the message
2025-09-04 05:23:06,565 - confession_bot.ranking_system - ERROR - get_user_achievements:604 - Failed to get achievements for user 1298849354: no such column: earned_date
2025-09-04 05:23:26,317 - confession_bot.ranking_system - ERROR - get_user_achievements:604 - Failed to get achievements for user 1298849354: no such column: earned_date
2025-09-04 05:30:32,477 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Message is not modified: specified new message content and reply markup are exactly the same as a current content and reply markup of the message
2025-09-04 05:32:35,496 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-04 05:32:47,030 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-04 05:32:47,133 - confession_bot.ranking_integration - ERROR - check_and_notify_rank_up:277 - Error checking rank up: no such table: rank_history
2025-09-04 05:32:47,244 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-04 05:33:26,559 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Message is not modified: specified new message content and reply markup are exactly the same as a current content and reply markup of the message
2025-09-04 05:33:57,550 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '+' is reserved and must be escaped with the preceding '\'
2025-09-04 05:34:11,205 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '+' is reserved and must be escaped with the preceding '\'
2025-09-04 05:34:37,112 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Message is not modified: specified new message content and reply markup are exactly the same as a current content and reply markup of the message
2025-09-04 05:35:29,849 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '+' is reserved and must be escaped with the preceding '\'
2025-09-04 05:35:33,385 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '+' is reserved and must be escaped with the preceding '\'
2025-09-04 05:49:33,976 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 05:49:38,390 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 05:49:40,251 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 05:49:45,070 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 05:49:47,399 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 12:33:10,354 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-04 12:33:35,421 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: There is no text in the message to edit
2025-09-04 12:35:02,639 - confession_bot.error_handler - ERROR - wrapper:183 - Network error: Unknown error in HTTP implementation: EndOfStream()
2025-09-04 12:35:40,305 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-04 12:36:02,232 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: There is no text in the message to edit
2025-09-04 12:36:49,456 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-04 12:37:10,558 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-04 12:37:10,641 - confession_bot.ranking_integration - ERROR - check_and_notify_rank_up:277 - Error checking rank up: no such table: rank_history
2025-09-04 12:37:10,734 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-04 12:37:53,978 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-04 12:38:08,116 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: There is no text in the message to edit
2025-09-04 12:48:25,948 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-04 12:48:41,422 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-04 12:48:41,501 - confession_bot.ranking_integration - ERROR - check_and_notify_rank_up:277 - Error checking rank up: no such table: rank_history
2025-09-04 12:48:41,597 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-04 14:08:28,826 - confession_bot.error_handler - ERROR - wrapper:149 - Request timed out: Timed out
2025-09-04 14:11:15,515 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 14:11:20,327 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 14:11:22,271 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 14:11:28,314 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 14:11:30,261 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 14:11:34,866 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Message to delete not found
2025-09-04 14:11:35,998 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 14:11:37,814 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 14:11:42,651 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 14:11:45,008 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 14:26:00,770 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 14:26:05,788 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 14:26:07,630 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 14:26:12,956 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 14:26:15,413 - confession_bot.error_handler - ERROR - global_error_handler:384 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 330, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2025-09-04 15:09:02,964 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-04 15:09:30,365 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: There is no text in the message to edit
2025-09-04 15:10:38,553 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-04 15:10:48,670 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-04 15:10:48,777 - confession_bot.ranking_integration - ERROR - check_and_notify_rank_up:277 - Error checking rank up: no such table: rank_history
2025-09-04 15:10:48,920 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-04 15:17:16,522 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-04 15:17:27,437 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 1298849354: no such column: rd.points_required
2025-09-05 01:04:37,166 - confession_bot.ranking_system - ERROR - get_user_achievements:604 - Failed to get achievements for user 1298849354: no such column: earned_date
2025-09-05 01:05:34,146 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: There is no text in the message to edit
2025-09-05 01:06:02,189 - confession_bot.ranking_system - ERROR - _check_rank_up:338 - Failed to check rank up for user 6261688120: no such column: rd.points_required
2025-09-05 01:06:15,129 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: There is no text in the message to edit
2025-09-05 01:07:13,100 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: There is no text in the message to edit
2025-09-05 02:07:12,733 - confession_bot.error_handler - ERROR - wrapper:221 - Unexpected error in handle_menu_choice: 'RankingManager' object has no attribute 'get_db'
Traceback (most recent call last):
  File "C:\Users\sende\Desktop\bott\error_handler.py", line 123, in wrapper
    return await func(update, context, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\bott\bot.py", line 392, in handle_menu_choice
    await show_enhanced_ranking_menu(update, context)
  File "C:\Users\sende\Desktop\bott\enhanced_ranking_ui.py", line 383, in show_enhanced_ranking_menu
    rank_display = EnhancedRankingUI.format_enhanced_rank_display(user_rank, user_id)
  File "C:\Users\sende\Desktop\bott\enhanced_ranking_ui.py", line 84, in format_enhanced_rank_display
    conn = ranking_manager.get_db()
           ^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'RankingManager' object has no attribute 'get_db'
2025-09-06 01:11:44,277 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: There is no text in the message to edit
2025-09-06 01:15:47,991 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '(' is reserved and must be escaped with the preceding '\'
2025-09-06 01:16:21,579 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-06 01:33:31,859 - confession_bot.error_handler - ERROR - wrapper:221 - Unexpected error in handle_menu_choice: name 'ranking_manager' is not defined
Traceback (most recent call last):
  File "C:\Users\sende\Desktop\bott\error_handler.py", line 123, in wrapper
    return await func(update, context, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\bott\bot.py", line 392, in handle_menu_choice
    await show_enhanced_ranking_menu(update, context)
  File "C:\Users\sende\Desktop\bott\enhanced_ranking_ui.py", line 373, in show_enhanced_ranking_menu
    user_rank = ranking_manager.get_user_rank(user_id)
                ^^^^^^^^^^^^^^^
NameError: name 'ranking_manager' is not defined
2025-09-06 01:38:48,787 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:39:03,812 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:39:04,824 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:39:06,347 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:39:08,616 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:39:12,010 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:39:22,097 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:39:23,122 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:39:24,646 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:39:26,913 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:39:27,004 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 10 errors
2025-09-06 01:39:30,309 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:39:30,402 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 11 errors
2025-09-06 01:39:40,414 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:39:40,565 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 12 errors
2025-09-06 01:39:41,440 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:39:41,547 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 13 errors
2025-09-06 01:39:42,964 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:39:43,099 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 14 errors
2025-09-06 01:39:46,471 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:39:46,623 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 15 errors
2025-09-06 01:39:49,901 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:39:50,072 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 16 errors
2025-09-06 01:40:00,971 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:40:01,060 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 17 errors
2025-09-06 01:40:01,991 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:40:02,106 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 18 errors
2025-09-06 01:40:03,503 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:40:03,615 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 19 errors
2025-09-06 01:40:05,760 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:40:05,855 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 20 errors
2025-09-06 01:40:13,051 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:40:13,199 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 21 errors
2025-09-06 01:40:23,145 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:40:23,214 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 22 errors
2025-09-06 01:40:24,155 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:40:24,237 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 23 errors
2025-09-06 01:40:25,674 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:40:25,784 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 24 errors
2025-09-06 01:40:29,192 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:40:29,308 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 25 errors
2025-09-06 01:40:32,579 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:40:32,696 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 26 errors
2025-09-06 01:40:43,657 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:40:43,771 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 27 errors
2025-09-06 01:40:44,671 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:40:44,758 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 28 errors
2025-09-06 01:40:46,191 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:40:46,283 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 29 errors
2025-09-06 01:40:48,458 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:40:48,563 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 30 errors
2025-09-06 01:40:55,729 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:40:55,805 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 31 errors
2025-09-06 01:41:05,809 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:41:05,923 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 32 errors
2025-09-06 01:41:06,828 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:41:06,905 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 33 errors
2025-09-06 01:41:08,337 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:41:08,416 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 34 errors
2025-09-06 01:41:11,853 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:41:11,945 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 35 errors
2025-09-06 01:41:15,240 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:41:15,353 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 36 errors
2025-09-06 01:41:20,318 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:41:20,403 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 37 errors
2025-09-06 01:41:31,379 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:41:31,489 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 38 errors
2025-09-06 01:41:42,779 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:41:42,836 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 39 errors
2025-09-06 01:42:04,902 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:42:04,984 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 40 errors
2025-09-06 01:42:05,923 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:42:05,995 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 41 errors
2025-09-06 01:42:10,969 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:42:11,051 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 42 errors
2025-09-06 01:42:13,242 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:42:13,348 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 43 errors
2025-09-06 01:42:16,623 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:42:16,697 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 44 errors
2025-09-06 01:42:27,697 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:42:27,793 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 45 errors
2025-09-06 01:42:28,713 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:42:28,797 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 46 errors
2025-09-06 01:42:30,235 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:42:30,315 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 47 errors
2025-09-06 01:42:32,504 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:42:32,593 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 48 errors
2025-09-06 01:42:46,958 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:42:47,034 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 49 errors
2025-09-06 01:42:47,989 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:42:48,072 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 50 errors
2025-09-06 01:42:49,503 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:42:49,632 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 51 errors
2025-09-06 01:42:51,766 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:42:51,839 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 52 errors
2025-09-06 01:42:55,157 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:42:55,247 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 53 errors
2025-09-06 01:43:00,240 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:43:00,280 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 54 errors
2025-09-06 01:43:07,861 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:43:07,913 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 55 errors
2025-09-06 01:43:30,328 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:43:30,417 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 56 errors
2025-09-06 01:43:41,365 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:43:41,432 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 57 errors
2025-09-06 01:43:42,378 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:43:42,470 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 58 errors
2025-09-06 01:43:43,902 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:43:44,000 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 59 errors
2025-09-06 01:43:46,158 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:43:46,223 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 60 errors
2025-09-06 01:43:54,566 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:43:54,623 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 61 errors
2025-09-06 01:43:55,576 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:43:55,651 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 62 errors
2025-09-06 01:43:57,084 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:43:57,147 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 63 errors
2025-09-06 01:43:59,357 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:43:59,456 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 64 errors
2025-09-06 01:44:02,747 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:44:02,830 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 65 errors
2025-09-06 01:44:07,833 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:44:07,917 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 66 errors
2025-09-06 01:44:18,913 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:44:19,001 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 67 errors
2025-09-06 01:44:30,311 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:44:30,391 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 68 errors
2025-09-06 01:44:47,410 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:44:47,489 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 69 errors
2025-09-06 01:45:13,054 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:45:13,131 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 70 errors
2025-09-06 01:45:48,075 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:45:48,162 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 71 errors
2025-09-06 01:45:49,083 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:45:49,155 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 72 errors
2025-09-06 01:45:50,594 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:45:50,679 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 73 errors
2025-09-06 01:45:52,862 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:45:52,932 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 74 errors
2025-09-06 01:45:56,244 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:45:56,328 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 75 errors
2025-09-06 01:46:07,308 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:46:07,388 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 76 errors
2025-09-06 01:46:08,315 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:46:08,394 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 77 errors
2025-09-06 01:46:09,823 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:46:09,895 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 78 errors
2025-09-06 01:46:12,085 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:46:12,166 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 79 errors
2025-09-06 01:46:19,383 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:46:19,474 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 80 errors
2025-09-06 01:46:29,475 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:46:29,545 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 81 errors
2025-09-06 01:46:30,484 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:46:30,561 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 82 errors
2025-09-06 01:46:32,001 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:46:32,084 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 83 errors
2025-09-06 01:46:34,271 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:46:34,352 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 84 errors
2025-09-06 01:46:37,659 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:46:37,743 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 85 errors
2025-09-06 01:46:48,726 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:46:48,793 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 86 errors
2025-09-06 01:46:49,743 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:46:49,822 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 87 errors
2025-09-06 01:46:51,261 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:46:51,356 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 88 errors
2025-09-06 01:46:53,517 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:46:53,591 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 89 errors
2025-09-06 01:46:56,901 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:46:57,002 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 90 errors
2025-09-06 01:47:01,984 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:47:02,083 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 91 errors
2025-09-06 01:47:14,613 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:47:14,683 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 92 errors
2025-09-06 01:47:15,619 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:47:15,729 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 93 errors
2025-09-06 01:47:17,134 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:47:17,235 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 94 errors
2025-09-06 01:47:19,400 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:47:19,470 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 95 errors
2025-09-06 01:47:22,788 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:47:22,897 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 96 errors
2025-09-06 01:47:27,864 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:47:27,969 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 97 errors
2025-09-06 01:47:35,490 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:47:35,607 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 98 errors
2025-09-06 01:47:46,896 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:47:47,004 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 99 errors
2025-09-06 01:48:03,989 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:48:04,099 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 100 errors
2025-09-06 01:48:29,626 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:48:29,705 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 101 errors
2025-09-06 01:48:59,643 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:48:59,731 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 102 errors
2025-09-06 01:49:29,661 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:49:29,741 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 103 errors
2025-09-06 01:49:59,670 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:49:59,763 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 104 errors
2025-09-06 01:50:29,682 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:50:29,786 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 105 errors
2025-09-06 01:50:59,704 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:50:59,795 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 106 errors
2025-09-06 01:51:29,717 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:51:29,832 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 107 errors
2025-09-06 01:51:59,729 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:51:59,807 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 108 errors
2025-09-06 01:52:29,748 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:52:29,830 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 109 errors
2025-09-06 01:52:59,758 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:52:59,839 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 110 errors
2025-09-06 01:53:29,778 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:53:29,856 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 111 errors
2025-09-06 01:53:59,787 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:53:59,875 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 112 errors
2025-09-06 01:54:29,794 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:54:29,863 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 113 errors
2025-09-06 01:54:59,810 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:54:59,882 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 114 errors
2025-09-06 01:55:29,817 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:55:29,892 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 115 errors
2025-09-06 01:56:19,883 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:56:19,953 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 116 errors
2025-09-06 01:56:20,903 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:56:20,975 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 117 errors
2025-09-06 01:56:22,795 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 182, in try_connect
    stream = await asynclib.connect_tcp(remote_host, remote_port, local_address)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2596, in connect_tcp
    await get_running_loop().create_connection(
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        StreamProtocol, host, port, local_addr=local_address
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ),
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1166, in create_connection
    raise exceptions[0]
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1141, in create_connection
    sock = await self._connect_sock(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
        exceptions, addrinfo, laddr_infos)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 1044, in _connect_sock
    await self.sock_connect(sock, address)
  File "C:\Program Files\Python313\Lib\asyncio\proactor_events.py", line 726, in sock_connect
    return await self._proactor.connect(sock, address)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 804, in _poll
    value = callback(transferred, key, ov)
  File "C:\Program Files\Python313\Lib\asyncio\windows_events.py", line 600, in finish_connect
    ov.getresult()
    ~~~~~~~~~~~~^^
ConnectionAbortedError: [WinError 1236] The network connection was aborted by the local system

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 248, in connect_tcp
    raise OSError("All connection attempts failed") from cause
OSError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: All connection attempts failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: All connection attempts failed
2025-09-06 01:56:32,592 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 118 errors
2025-09-06 01:56:32,595 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:56:32,651 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 119 errors
2025-09-06 01:56:35,980 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:56:36,025 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 120 errors
2025-09-06 01:56:41,059 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:56:41,161 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 121 errors
2025-09-06 01:56:48,674 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 114, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 215, in connect_tcp
    gai_res = await getaddrinfo(
              ^^^^^^^^^^^^^^^^^^
        target_host, remote_port, family=family, type=socket.SOCK_STREAM
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_core\_sockets.py", line 592, in getaddrinfo
    gai_res = await get_async_backend().getaddrinfo(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        encoded_host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\anyio\_backends\_asyncio.py", line 2698, in getaddrinfo
    return await get_running_loop().getaddrinfo(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        host, port, family=family, type=type, proto=proto, flags=flags
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Program Files\Python313\Lib\asyncio\base_events.py", line 939, in getaddrinfo
    return await self.run_in_executor(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
        None, getaddr_func, host, port, family, type, proto, flags)
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python313\Lib\concurrent\futures\thread.py", line 59, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Program Files\Python313\Lib\socket.py", line 977, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
               ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
socket.gaierror: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 262, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection_pool.py", line 245, in handle_async_request
    response = await connection.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 92, in handle_async_request
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 69, in handle_async_request
    stream = await self._connect(request)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_async\connection.py", line 117, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\auto.py", line 31, in connect_tcp
    return await self._backend.connect_tcp(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<5 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_backends\anyio.py", line 112, in connect_tcp
    with map_exceptions(exc_map):
         ~~~~~~~~~~~~~~^^^^^^^^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 216, in do_request
    res = await self._client.request(
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1617, in send
    response = await self._send_handling_auth(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 352, in handle_async_request
    with map_httpcore_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Program Files\Python313\Lib\contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11001] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 607, in _network_loop_retry
    if not await action_cb():
           ^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 335, in polling_action_cb
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_updater.py", line 320, in polling_action_cb
    updates = await self.bot.get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 543, in get_updates
    updates = await super().get_updates(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3661, in get_updates
    await self._post(
    ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    ),
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 291, in _request_wrapper
    raise exc
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 277, in _request_wrapper
    code, payload = await self.do_request(
                    ^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_httpxrequest.py", line 240, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed
2025-09-06 01:56:48,769 - confession_bot.error_handler - ERROR - add_error:51 - Circuit breaker opened for global:unhandled due to 122 errors
2025-09-06 02:55:03,212 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: There is no text in the message to edit
2025-09-06 02:57:17,486 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '(' is reserved and must be escaped with the preceding '\'
2025-09-06 02:57:59,098 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '!' is reserved and must be escaped with the preceding '\'
2025-09-06 02:58:15,087 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-06 02:58:19,535 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-06 13:11:16,480 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-06 13:11:56,999 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-06 13:11:58,921 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-06 13:14:05,840 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-06 13:14:08,231 - confession_bot.error_handler - ERROR - wrapper:132 - Bad request: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-06 15:49:49,129 - confession_bot.enhanced_ranking_ui - ERROR - show_ranking_analytics:679 - Error generating ranking analytics: argument of type 'coroutine' is not iterable
2025-09-06 15:50:02,810 - confession_bot.enhanced_ranking_ui - ERROR - show_ranking_analytics:679 - Error generating ranking analytics: argument of type 'coroutine' is not iterable
2025-09-06 15:50:02,985 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_application.py", line 1124, in process_update
    await coroutine
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_handler.py", line 141, in handle_update
    return await self.callback(update, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\boot\enhanced_ranking_ui.py", line 733, in enhanced_ranking_callback_handler
    await show_ranking_analytics(update, context)
  File "C:\Users\sende\Desktop\boot\enhanced_ranking_ui.py", line 705, in show_ranking_analytics
    await update.callback_query.edit_message_text(
    ...<3 lines>...
    )
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_callbackquery.py", line 241, in edit_message_text
    return await self.message.edit_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_message.py", line 2526, in edit_text
    return await self.get_bot().edit_message_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<13 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 1482, in edit_message_text
    return await super().edit_message_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<13 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3381, in edit_message_text
    return await self._send_message(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 507, in _send_message
    result = await super()._send_message(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<17 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 559, in _send_message
    result = await self._post(
             ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 328, in _request_wrapper
    raise BadRequest(message)
telegram.error.BadRequest: Message is not modified: specified new message content and reply markup are exactly the same as a current content and reply markup of the message
2025-09-06 15:50:05,531 - confession_bot.error_handler - ERROR - notify_admins_of_error:310 - Failed to notify admin 1298849354 of error: Can't parse entities: unsupported start tag "3" at byte offset 1085
2025-09-06 15:50:05,806 - confession_bot.error_handler - ERROR - notify_admins_of_error:310 - Failed to notify admin 7085119805 of error: Can't parse entities: unsupported start tag "3" at byte offset 1085
2025-09-06 15:51:05,768 - confession_bot.enhanced_ranking_ui - ERROR - show_ranking_analytics:696 - Error generating ranking analytics: argument of type 'coroutine' is not iterable
2025-09-06 15:52:42,190 - confession_bot.analytics - ERROR - wrapper:38 - Error in get_category_analytics: ambiguous column name: likes
2025-09-06 15:52:42,560 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_application.py", line 1124, in process_update
    await coroutine
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_handler.py", line 141, in handle_update
    return await self.callback(update, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\boot\enhanced_ranking_ui.py", line 750, in enhanced_ranking_callback_handler
    await show_ranking_analytics(update, context)
  File "C:\Users\sende\Desktop\boot\enhanced_ranking_ui.py", line 722, in show_ranking_analytics
    await update.callback_query.edit_message_text(
    ...<3 lines>...
    )
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_callbackquery.py", line 241, in edit_message_text
    return await self.message.edit_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_message.py", line 2526, in edit_text
    return await self.get_bot().edit_message_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<13 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 1482, in edit_message_text
    return await super().edit_message_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<13 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3381, in edit_message_text
    return await self._send_message(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 507, in _send_message
    result = await super()._send_message(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<17 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 559, in _send_message
    result = await self._post(
             ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 328, in _request_wrapper
    raise BadRequest(message)
telegram.error.BadRequest: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-06 15:52:42,725 - confession_bot.error_handler - ERROR - notify_admins_of_error:310 - Failed to notify admin 1298849354 of error: Can't parse entities: unsupported start tag "3" at byte offset 1030
2025-09-06 15:52:43,018 - confession_bot.error_handler - ERROR - notify_admins_of_error:310 - Failed to notify admin 7085119805 of error: Can't parse entities: unsupported start tag "3" at byte offset 1030
2025-09-06 15:55:13,112 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_application.py", line 1124, in process_update
    await coroutine
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_handler.py", line 141, in handle_update
    return await self.callback(update, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\boot\enhanced_ranking_ui.py", line 750, in enhanced_ranking_callback_handler
    await show_ranking_analytics(update, context)
  File "C:\Users\sende\Desktop\boot\enhanced_ranking_ui.py", line 722, in show_ranking_analytics
    await update.callback_query.edit_message_text(
    ...<3 lines>...
    )
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_callbackquery.py", line 241, in edit_message_text
    return await self.message.edit_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_message.py", line 2526, in edit_text
    return await self.get_bot().edit_message_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<13 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 1482, in edit_message_text
    return await super().edit_message_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<13 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3381, in edit_message_text
    return await self._send_message(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 507, in _send_message
    result = await super()._send_message(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<17 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 559, in _send_message
    result = await self._post(
             ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 328, in _request_wrapper
    raise BadRequest(message)
telegram.error.BadRequest: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-06 15:55:13,286 - confession_bot.error_handler - ERROR - notify_admins_of_error:310 - Failed to notify admin 1298849354 of error: Can't parse entities: unsupported start tag "3" at byte offset 1030
2025-09-06 15:55:13,577 - confession_bot.error_handler - ERROR - notify_admins_of_error:310 - Failed to notify admin 7085119805 of error: Can't parse entities: unsupported start tag "3" at byte offset 1030
2025-09-06 15:56:27,449 - confession_bot.enhanced_ranking_ui - ERROR - show_ranking_analytics:696 - Error generating ranking analytics: Invalid format specifier '\.1f' for object of type 'float'
2025-09-06 15:57:45,484 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_application.py", line 1124, in process_update
    await coroutine
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_handler.py", line 141, in handle_update
    return await self.callback(update, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\boot\enhanced_ranking_ui.py", line 750, in enhanced_ranking_callback_handler
    await show_ranking_analytics(update, context)
  File "C:\Users\sende\Desktop\boot\enhanced_ranking_ui.py", line 722, in show_ranking_analytics
    await update.callback_query.edit_message_text(
    ...<3 lines>...
    )
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_callbackquery.py", line 241, in edit_message_text
    return await self.message.edit_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_message.py", line 2526, in edit_text
    return await self.get_bot().edit_message_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<13 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 1482, in edit_message_text
    return await super().edit_message_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<13 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3381, in edit_message_text
    return await self._send_message(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 507, in _send_message
    result = await super()._send_message(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<17 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 559, in _send_message
    result = await self._post(
             ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 328, in _request_wrapper
    raise BadRequest(message)
telegram.error.BadRequest: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-06 15:57:45,665 - confession_bot.error_handler - ERROR - notify_admins_of_error:310 - Failed to notify admin 1298849354 of error: Can't parse entities: unsupported start tag "3" at byte offset 1030
2025-09-06 15:57:46,014 - confession_bot.error_handler - ERROR - notify_admins_of_error:310 - Failed to notify admin 7085119805 of error: Can't parse entities: unsupported start tag "3" at byte offset 1030
2025-09-06 16:00:13,597 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_application.py", line 1124, in process_update
    await coroutine
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_handler.py", line 141, in handle_update
    return await self.callback(update, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\boot\enhanced_ranking_ui.py", line 761, in enhanced_ranking_callback_handler
    await show_ranking_analytics(update, context)
  File "C:\Users\sende\Desktop\boot\enhanced_ranking_ui.py", line 733, in show_ranking_analytics
    await update.callback_query.edit_message_text(
    ...<3 lines>...
    )
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_callbackquery.py", line 241, in edit_message_text
    return await self.message.edit_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_message.py", line 2526, in edit_text
    return await self.get_bot().edit_message_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<13 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 1482, in edit_message_text
    return await super().edit_message_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<13 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3381, in edit_message_text
    return await self._send_message(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 507, in _send_message
    result = await super()._send_message(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<17 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 559, in _send_message
    result = await self._post(
             ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 328, in _request_wrapper
    raise BadRequest(message)
telegram.error.BadRequest: Message is not modified: specified new message content and reply markup are exactly the same as a current content and reply markup of the message
2025-09-06 16:00:13,777 - confession_bot.error_handler - ERROR - notify_admins_of_error:310 - Failed to notify admin 1298849354 of error: Can't parse entities: unsupported start tag "3" at byte offset 1085
2025-09-06 16:00:14,065 - confession_bot.error_handler - ERROR - notify_admins_of_error:310 - Failed to notify admin 7085119805 of error: Can't parse entities: unsupported start tag "3" at byte offset 1085
2025-09-06 16:00:27,318 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_application.py", line 1124, in process_update
    await coroutine
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_handler.py", line 141, in handle_update
    return await self.callback(update, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\boot\enhanced_ranking_ui.py", line 761, in enhanced_ranking_callback_handler
    await show_ranking_analytics(update, context)
  File "C:\Users\sende\Desktop\boot\enhanced_ranking_ui.py", line 733, in show_ranking_analytics
    await update.callback_query.edit_message_text(
    ...<3 lines>...
    )
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_callbackquery.py", line 241, in edit_message_text
    return await self.message.edit_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_message.py", line 2526, in edit_text
    return await self.get_bot().edit_message_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<13 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 1482, in edit_message_text
    return await super().edit_message_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<13 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3381, in edit_message_text
    return await self._send_message(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 507, in _send_message
    result = await super()._send_message(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<17 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 559, in _send_message
    result = await self._post(
             ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 328, in _request_wrapper
    raise BadRequest(message)
telegram.error.BadRequest: Message is not modified: specified new message content and reply markup are exactly the same as a current content and reply markup of the message
2025-09-06 16:00:27,507 - confession_bot.error_handler - ERROR - notify_admins_of_error:310 - Failed to notify admin 1298849354 of error: Can't parse entities: unsupported start tag "3" at byte offset 1085
2025-09-06 16:00:27,920 - confession_bot.error_handler - ERROR - notify_admins_of_error:310 - Failed to notify admin 7085119805 of error: Can't parse entities: unsupported start tag "3" at byte offset 1085
2025-09-06 16:21:51,283 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_application.py", line 1124, in process_update
    await coroutine
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_handler.py", line 141, in handle_update
    return await self.callback(update, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\boot\enhanced_ranking_ui.py", line 753, in enhanced_ranking_callback_handler
    await show_rank_ladder(update, context)
  File "C:\Users\sende\Desktop\boot\rank_ladder.py", line 154, in show_rank_ladder
    await update.callback_query.edit_message_text(
    ...<3 lines>...
    )
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_callbackquery.py", line 241, in edit_message_text
    return await self.message.edit_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_message.py", line 2526, in edit_text
    return await self.get_bot().edit_message_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<13 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 1482, in edit_message_text
    return await super().edit_message_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<13 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3381, in edit_message_text
    return await self._send_message(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 507, in _send_message
    result = await super()._send_message(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<17 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 559, in _send_message
    result = await self._post(
             ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 328, in _request_wrapper
    raise BadRequest(message)
telegram.error.BadRequest: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-06 16:21:51,879 - confession_bot.error_handler - ERROR - notify_admins_of_error:310 - Failed to notify admin 1298849354 of error: Can't parse entities: unsupported start tag "3" at byte offset 1010
2025-09-06 16:21:52,249 - confession_bot.error_handler - ERROR - notify_admins_of_error:310 - Failed to notify admin 7085119805 of error: Can't parse entities: unsupported start tag "3" at byte offset 1010
2025-09-06 16:23:31,296 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_application.py", line 1124, in process_update
    await coroutine
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_handler.py", line 141, in handle_update
    return await self.callback(update, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\boot\enhanced_ranking_ui.py", line 753, in enhanced_ranking_callback_handler
    await show_rank_ladder(update, context)
  File "C:\Users\sende\Desktop\boot\rank_ladder.py", line 154, in show_rank_ladder
    await update.callback_query.edit_message_text(
    ...<3 lines>...
    )
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_callbackquery.py", line 241, in edit_message_text
    return await self.message.edit_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_message.py", line 2526, in edit_text
    return await self.get_bot().edit_message_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<13 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 1482, in edit_message_text
    return await super().edit_message_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<13 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3381, in edit_message_text
    return await self._send_message(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 507, in _send_message
    result = await super()._send_message(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<17 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 559, in _send_message
    result = await self._post(
             ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 328, in _request_wrapper
    raise BadRequest(message)
telegram.error.BadRequest: Can't parse entities: character '.' is reserved and must be escaped with the preceding '\'
2025-09-06 16:23:31,518 - confession_bot.error_handler - ERROR - notify_admins_of_error:310 - Failed to notify admin 1298849354 of error: Can't parse entities: unsupported start tag "3" at byte offset 1010
2025-09-06 16:23:31,837 - confession_bot.error_handler - ERROR - notify_admins_of_error:310 - Failed to notify admin 7085119805 of error: Can't parse entities: unsupported start tag "3" at byte offset 1010
2025-09-06 16:26:16,753 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_application.py", line 1124, in process_update
    await coroutine
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_handler.py", line 141, in handle_update
    return await self.callback(update, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\boot\enhanced_ranking_ui.py", line 753, in enhanced_ranking_callback_handler
    await show_rank_ladder(update, context)
  File "C:\Users\sende\Desktop\boot\rank_ladder.py", line 154, in show_rank_ladder
    await update.callback_query.edit_message_text(
    ...<3 lines>...
    )
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_callbackquery.py", line 241, in edit_message_text
    return await self.message.edit_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_message.py", line 2526, in edit_text
    return await self.get_bot().edit_message_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<13 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 1482, in edit_message_text
    return await super().edit_message_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<13 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3381, in edit_message_text
    return await self._send_message(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 507, in _send_message
    result = await super()._send_message(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<17 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 559, in _send_message
    result = await self._post(
             ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 328, in _request_wrapper
    raise BadRequest(message)
telegram.error.BadRequest: Can't parse entities: character '-' is reserved and must be escaped with the preceding '\'
2025-09-06 16:26:19,374 - confession_bot.error_handler - ERROR - notify_admins_of_error:310 - Failed to notify admin 1298849354 of error: Can't parse entities: unsupported start tag "3" at byte offset 1010
2025-09-06 16:26:19,664 - confession_bot.error_handler - ERROR - notify_admins_of_error:310 - Failed to notify admin 7085119805 of error: Can't parse entities: unsupported start tag "3" at byte offset 1010
2025-09-06 17:10:29,262 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_application.py", line 1124, in process_update
    await coroutine
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_handler.py", line 141, in handle_update
    return await self.callback(update, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\boot\enhanced_ranking_ui.py", line 753, in enhanced_ranking_callback_handler
    await show_rank_ladder(update, context)
  File "C:\Users\sende\Desktop\boot\rank_ladder.py", line 154, in show_rank_ladder
    await update.callback_query.edit_message_text(
    ...<3 lines>...
    )
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_callbackquery.py", line 241, in edit_message_text
    return await self.message.edit_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_message.py", line 2526, in edit_text
    return await self.get_bot().edit_message_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<13 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 1482, in edit_message_text
    return await super().edit_message_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<13 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3381, in edit_message_text
    return await self._send_message(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 507, in _send_message
    result = await super()._send_message(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<17 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 559, in _send_message
    result = await self._post(
             ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 328, in _request_wrapper
    raise BadRequest(message)
telegram.error.BadRequest: Can't parse entities: character '-' is reserved and must be escaped with the preceding '\'
2025-09-06 17:10:30,041 - confession_bot.error_handler - ERROR - notify_admins_of_error:310 - Failed to notify admin 1298849354 of error: Can't parse entities: unsupported start tag "3" at byte offset 1010
2025-09-06 17:10:30,391 - confession_bot.error_handler - ERROR - notify_admins_of_error:310 - Failed to notify admin 7085119805 of error: Can't parse entities: unsupported start tag "3" at byte offset 1010
2025-09-06 17:26:06,690 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_application.py", line 1124, in process_update
    await coroutine
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_handler.py", line 141, in handle_update
    return await self.callback(update, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\boot\enhanced_ranking_ui.py", line 753, in enhanced_ranking_callback_handler
    await show_rank_ladder(update, context)
  File "C:\Users\sende\Desktop\boot\rank_ladder.py", line 154, in show_rank_ladder
    await update.callback_query.edit_message_text(
    ...<3 lines>...
    )
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_callbackquery.py", line 241, in edit_message_text
    return await self.message.edit_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_message.py", line 2526, in edit_text
    return await self.get_bot().edit_message_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<13 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 1482, in edit_message_text
    return await super().edit_message_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<13 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3381, in edit_message_text
    return await self._send_message(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 507, in _send_message
    result = await super()._send_message(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<17 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 559, in _send_message
    result = await self._post(
             ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 328, in _request_wrapper
    raise BadRequest(message)
telegram.error.BadRequest: Can't parse entities: character '-' is reserved and must be escaped with the preceding '\'
2025-09-06 17:26:07,106 - confession_bot.error_handler - ERROR - notify_admins_of_error:310 - Failed to notify admin 1298849354 of error: Can't parse entities: unsupported start tag "3" at byte offset 1010
2025-09-06 17:26:07,407 - confession_bot.error_handler - ERROR - notify_admins_of_error:310 - Failed to notify admin 7085119805 of error: Can't parse entities: unsupported start tag "3" at byte offset 1010
2025-09-06 17:29:47,343 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_application.py", line 1124, in process_update
    await coroutine
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_handler.py", line 141, in handle_update
    return await self.callback(update, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\boot\enhanced_ranking_ui.py", line 753, in enhanced_ranking_callback_handler
    await show_rank_ladder(update, context)
  File "C:\Users\sende\Desktop\boot\rank_ladder.py", line 165, in show_rank_ladder
    await update.callback_query.edit_message_text(
    ...<3 lines>...
    )
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_callbackquery.py", line 241, in edit_message_text
    return await self.message.edit_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_message.py", line 2526, in edit_text
    return await self.get_bot().edit_message_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<13 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 1482, in edit_message_text
    return await super().edit_message_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<13 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3381, in edit_message_text
    return await self._send_message(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 507, in _send_message
    result = await super()._send_message(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<17 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 559, in _send_message
    result = await self._post(
             ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 328, in _request_wrapper
    raise BadRequest(message)
telegram.error.BadRequest: Can't parse entities: character '-' is reserved and must be escaped with the preceding '\'
2025-09-06 17:29:49,204 - confession_bot.error_handler - ERROR - notify_admins_of_error:310 - Failed to notify admin 1298849354 of error: Can't parse entities: unsupported start tag "3" at byte offset 1010
2025-09-06 17:29:49,511 - confession_bot.error_handler - ERROR - notify_admins_of_error:310 - Failed to notify admin 7085119805 of error: Can't parse entities: unsupported start tag "3" at byte offset 1010
2025-09-06 17:34:51,078 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_application.py", line 1124, in process_update
    await coroutine
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_handler.py", line 141, in handle_update
    return await self.callback(update, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\boot\enhanced_ranking_ui.py", line 766, in enhanced_ranking_callback_handler
    await show_ranking_analytics(update, context)
  File "C:\Users\sende\Desktop\boot\enhanced_ranking_ui.py", line 734, in show_ranking_analytics
    await update.callback_query.edit_message_text(
    ...<3 lines>...
    )
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_callbackquery.py", line 241, in edit_message_text
    return await self.message.edit_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_message.py", line 2526, in edit_text
    return await self.get_bot().edit_message_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<13 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 1482, in edit_message_text
    return await super().edit_message_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<13 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3381, in edit_message_text
    return await self._send_message(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 507, in _send_message
    result = await super()._send_message(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<17 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 559, in _send_message
    result = await self._post(
             ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 328, in _request_wrapper
    raise BadRequest(message)
telegram.error.BadRequest: Message is not modified: specified new message content and reply markup are exactly the same as a current content and reply markup of the message
2025-09-06 17:34:51,607 - confession_bot.error_handler - ERROR - notify_admins_of_error:310 - Failed to notify admin 1298849354 of error: Can't parse entities: unsupported start tag "3" at byte offset 1085
2025-09-06 17:34:51,932 - confession_bot.error_handler - ERROR - notify_admins_of_error:310 - Failed to notify admin 7085119805 of error: Can't parse entities: unsupported start tag "3" at byte offset 1085
2025-09-06 17:46:41,260 - confession_bot.error_handler - ERROR - wrapper:221 - Unexpected error in callback_handler: 0
Traceback (most recent call last):
  File "C:\Users\sende\Desktop\boot\error_handler.py", line 123, in wrapper
    return await func(update, context, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\boot\bot.py", line 3087, in callback_handler
    await see_comments_callback(update, context)
  File "C:\Users\sende\Desktop\boot\bot.py", line 2294, in see_comments_callback
    reply_id = reply[0]
               ~~~~~^^^
KeyError: 0
2025-09-06 17:46:41,717 - confession_bot.error_handler - ERROR - notify_admins_of_error:310 - Failed to notify admin 7085119805 of error: Chat not found
2025-09-06 17:48:20,199 - confession_bot.error_handler - ERROR - wrapper:221 - Unexpected error in callback_handler: 0
Traceback (most recent call last):
  File "C:\Users\sende\Desktop\boot\error_handler.py", line 123, in wrapper
    return await func(update, context, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\boot\bot.py", line 3087, in callback_handler
    await see_comments_callback(update, context)
  File "C:\Users\sende\Desktop\boot\bot.py", line 2294, in see_comments_callback
    reply_id = reply[0]
               ~~~~~^^^
KeyError: 0
2025-09-06 17:48:20,616 - confession_bot.error_handler - ERROR - notify_admins_of_error:310 - Failed to notify admin 7085119805 of error: Chat not found
2025-09-06 17:59:21,160 - confession_bot.migrations - ERROR - apply_migration:492 - Failed to apply migration 15: table posts_new has 20 columns but 24 values were supplied
2025-09-06 17:59:21,185 - confession_bot.migrations - ERROR - migrate_to_latest:518 - Migration failed at version 15
2025-09-06 18:01:10,701 - confession_bot.migrations - ERROR - apply_migration:492 - Failed to apply migration 15: table posts_new has 20 columns but 24 values were supplied
2025-09-06 18:01:10,703 - confession_bot.migrations - ERROR - migrate_to_latest:518 - Migration failed at version 15
2025-09-06 18:01:36,980 - confession_bot.migrations - ERROR - apply_migration:492 - Failed to apply migration 15: table posts_new has 20 columns but 24 values were supplied
2025-09-06 18:01:36,981 - confession_bot.migrations - ERROR - migrate_to_latest:518 - Migration failed at version 15
2025-09-06 18:02:27,225 - confession_bot.migrations - ERROR - apply_migration:492 - Failed to apply migration 15: table posts_new has 20 columns but 24 values were supplied
2025-09-06 18:02:27,225 - confession_bot.migrations - ERROR - migrate_to_latest:518 - Migration failed at version 15
2025-09-06 18:15:43,075 - confession_bot.migrations - ERROR - apply_migration:492 - Failed to apply migration 15: table posts_new has 20 columns but 24 values were supplied
2025-09-06 18:15:43,703 - confession_bot.migrations - ERROR - migrate_to_latest:518 - Migration failed at version 15
2025-09-07 08:55:14,591 - confession_bot.error_handler - ERROR - global_error_handler:395 - Global error handler triggered
Traceback (most recent call last):
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_application.py", line 1124, in process_update
    await coroutine
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_handler.py", line 141, in handle_update
    return await self.callback(update, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\boot\enhanced_ranking_ui.py", line 766, in enhanced_ranking_callback_handler
    await show_ranking_analytics(update, context)
  File "C:\Users\sende\Desktop\boot\enhanced_ranking_ui.py", line 734, in show_ranking_analytics
    await update.callback_query.edit_message_text(
    ...<3 lines>...
    )
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_callbackquery.py", line 241, in edit_message_text
    return await self.message.edit_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_message.py", line 2526, in edit_text
    return await self.get_bot().edit_message_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<13 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 1482, in edit_message_text
    return await super().edit_message_text(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<13 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 381, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 3381, in edit_message_text
    return await self._send_message(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<10 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 507, in _send_message
    result = await super()._send_message(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<17 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 559, in _send_message
    result = await self._post(
             ^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 469, in _post
    return await self._do_post(
           ^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\ext\_extbot.py", line 325, in _do_post
    return await super()._do_post(
           ^^^^^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\_bot.py", line 497, in _do_post
    return await request.post(
           ^^^^^^^^^^^^^^^^^^^
    ...<6 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 168, in post
    result = await self._request_wrapper(
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<7 lines>...
    )
    ^
  File "C:\Users\sende\AppData\Roaming\Python\Python313\site-packages\telegram\request\_baserequest.py", line 328, in _request_wrapper
    raise BadRequest(message)
telegram.error.BadRequest: Message is not modified: specified new message content and reply markup are exactly the same as a current content and reply markup of the message
2025-09-07 08:55:18,648 - confession_bot.error_handler - ERROR - notify_admins_of_error:310 - Failed to notify admin 1298849354 of error: Can't parse entities: unsupported start tag "3" at byte offset 1085
2025-09-07 08:55:19,670 - confession_bot.error_handler - ERROR - notify_admins_of_error:310 - Failed to notify admin 7085119805 of error: Can't parse entities: unsupported start tag "3" at byte offset 1085
2025-09-07 15:30:41,106 - confession_bot.migrations - ERROR - apply_migration:492 - Failed to apply migration 15: table posts_new has 20 columns but 24 values were supplied
2025-09-07 15:30:41,172 - confession_bot.migrations - ERROR - migrate_to_latest:518 - Migration failed at version 15
2025-09-07 15:48:55,350 - confession_bot.migrations - ERROR - apply_migration:492 - Failed to apply migration 15: table posts_new has 20 columns but 24 values were supplied
2025-09-07 15:48:55,402 - confession_bot.migrations - ERROR - migrate_to_latest:518 - Migration failed at version 15
2025-09-07 17:30:19,768 - confession_bot.error_handler - ERROR - wrapper:221 - Unexpected error in handle_menu_choice: '_GeneratorContextManager' object has no attribute 'cursor'
Traceback (most recent call last):
  File "C:\Users\sende\Desktop\boot\error_handler.py", line 123, in wrapper
    return await func(update, context, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sende\Desktop\boot\bot.py", line 405, in handle_menu_choice
    await show_enhanced_ranking_menu(update, context)
  File "C:\Users\sende\Desktop\boot\enhanced_ranking_ui.py", line 352, in show_enhanced_ranking_menu
    rank_display = EnhancedRankingUI.format_enhanced_rank_display(user_rank, user_id)
  File "C:\Users\sende\Desktop\boot\enhanced_ranking_ui.py", line 99, in format_enhanced_rank_display
    cursor = conn.cursor()
             ^^^^^^^^^^^
AttributeError: '_GeneratorContextManager' object has no attribute 'cursor'
2025-09-07 17:30:20,660 - confession_bot.error_handler - ERROR - notify_admins_of_error:310 - Failed to notify admin 7085119805 of error: Chat not found
